{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-navigator/src/utils.js","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-navigator/src/contexts.js","../../node_modules/svelte-navigator/src/paths.js","../../node_modules/svelte-navigator/src/warning.js","../../node_modules/svelte-navigator/src/routes.js","../../node_modules/svelte-navigator/src/history.js","../../node_modules/svelte-navigator/src/a11y.js","../../node_modules/svelte-navigator/src/Router.svelte","../../node_modules/svelte-navigator/src/hooks.js","../../node_modules/svelte-navigator/src/Route.svelte","../../node_modules/svelte-navigator/src/Link.svelte","../../node_modules/svelte-atoms/icons/index.js","../../node_modules/svelte-atoms/icons/arrowDown.js","../../node_modules/svelte-atoms/icons/arrowLeft.js","../../node_modules/svelte-atoms/icons/arrowRight.js","../../node_modules/svelte-atoms/icons/arrowUp.js","../../node_modules/svelte-atoms/icons/arrowsUpdown.js","../../node_modules/svelte-atoms/icons/attention.js","../../node_modules/svelte-atoms/icons/burger.js","../../node_modules/svelte-atoms/icons/calendar.js","../../node_modules/svelte-atoms/icons/cashbox.js","../../node_modules/svelte-atoms/icons/cashbox2.js","../../node_modules/svelte-atoms/icons/catalog.js","../../node_modules/svelte-atoms/icons/check.js","../../node_modules/svelte-atoms/icons/chevronDown.js","../../node_modules/svelte-atoms/icons/chevronLeft.js","../../node_modules/svelte-atoms/icons/chevronRight.js","../../node_modules/svelte-atoms/icons/chevronUp.js","../../node_modules/svelte-atoms/icons/clear.js","../../node_modules/svelte-atoms/icons/close.js","../../node_modules/svelte-atoms/icons/column.js","../../node_modules/svelte-atoms/icons/copy.js","../../node_modules/svelte-atoms/icons/cycle.js","../../node_modules/svelte-atoms/icons/visible.js","../../node_modules/svelte-atoms/icons/edit.js","../../node_modules/svelte-atoms/icons/favorite.js","../../node_modules/svelte-atoms/icons/favoriteFill.js","../../node_modules/svelte-atoms/icons/file.js","../../node_modules/svelte-atoms/icons/filter.js","../../node_modules/svelte-atoms/icons/history.js","../../node_modules/svelte-atoms/icons/inputCalendar.js","../../node_modules/svelte-atoms/icons/invisible.js","../../node_modules/svelte-atoms/icons/key.js","../../node_modules/svelte-atoms/icons/list3.js","../../node_modules/svelte-atoms/icons/loader.js","../../node_modules/svelte-atoms/icons/market.js","../../node_modules/svelte-atoms/icons/message.js","../../node_modules/svelte-atoms/icons/minus.js","../../node_modules/svelte-atoms/icons/moreHorizontal.js","../../node_modules/svelte-atoms/icons/moreVertical.js","../../node_modules/svelte-atoms/icons/phone.js","../../node_modules/svelte-atoms/icons/plus.js","../../node_modules/svelte-atoms/icons/print.js","../../node_modules/svelte-atoms/icons/question.js","../../node_modules/svelte-atoms/icons/rouble.js","../../node_modules/svelte-atoms/icons/save.js","../../node_modules/svelte-atoms/icons/set.js","../../node_modules/svelte-atoms/icons/settings.js","../../node_modules/svelte-atoms/icons/sort.js","../../node_modules/svelte-atoms/icons/sortDown.js","../../node_modules/svelte-atoms/icons/sortUp.js","../../node_modules/svelte-atoms/icons/trash.js","../../node_modules/svelte-atoms/icons/upload.js","../../node_modules/svelte-atoms/icons/download.js","../../node_modules/svelte-atoms/icons/cashCheck.js","../../node_modules/svelte-atoms/icons/move.js","../../node_modules/svelte-atoms/icons/tree.js","../../node_modules/svelte-atoms/icons/list4.js","../../node_modules/svelte-atoms/icons/ok.js","../../node_modules/svelte-atoms/icons/monitor.js","../../node_modules/svelte-atoms/icons/toggleOff.js","../../node_modules/svelte-atoms/icons/toggleOn.js","../../node_modules/svelte-atoms/icons/mail.js","../../node_modules/svelte-atoms/icons/mailFull.js","../../node_modules/svelte-atoms/icons/mailOk.js","../../node_modules/svelte-atoms/icons/fullScreen.js","../../node_modules/svelte-atoms/icons/smallScreen.js","../../node_modules/svelte-atoms/icons/cart.js","../../node_modules/svelte-atoms/icons/notifyNot.js","../../node_modules/svelte-atoms/icons/notify.js","../../node_modules/svelte-atoms/icons/monitorNot.js","../../node_modules/svelte-atoms/icons/start.js","../../node_modules/svelte-atoms/icons/image.js","../../node_modules/svelte-atoms/icons/hub.js","../../node_modules/svelte-atoms/icons/profile.js","../../node_modules/svelte-atoms/icons/time.js","../../node_modules/svelte-atoms/icons/pin.js","../../node_modules/svelte-atoms/icons/mark.js","../../node_modules/svelte-atoms/icons/copyLink.js","../../node_modules/svelte-atoms/icons/document.js","../../node_modules/svelte-atoms/icons/tire.js","../../node_modules/svelte-atoms/icons/cigarette.js","../../node_modules/svelte-atoms/icons/tShirt.js","../../node_modules/svelte-atoms/icons/shoes.js","../../node_modules/svelte-atoms/icons/bike.js","../../node_modules/svelte-atoms/icons/pulse.js","../../node_modules/svelte-atoms/icons/exit.js","../../node_modules/svelte-atoms/icons/zoomIn.js","../../node_modules/svelte-atoms/icons/zoomOut.js","../../node_modules/svelte-atoms/icons/search.js","../../node_modules/svelte-atoms/icons/flash.js","../../node_modules/svelte-atoms/icons/questionInvert.js","../../node_modules/svelte-atoms/icons/info.js","../../node_modules/svelte-atoms/utils.js","../../node_modules/svelte-atoms/Typography.svelte","../../node_modules/svelte-atoms/IconStatus.svelte","../../node_modules/svelte-atoms/Icon.svelte","../../node_modules/svelte-atoms/Loader.svelte","../../node_modules/svelte-atoms/Spacer.svelte","../../node_modules/svelte-atoms/DropZone.svelte","../../node_modules/js-cookie/dist/js.cookie.mjs","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nexport const isUndefined = value => typeof value === \"undefined\";\n\nexport const isFunction = value => typeof value === \"function\";\n\nexport const isNumber = value => typeof value === \"number\";\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nexport function shouldNavigate(event) {\n\treturn (\n\t\t!event.defaultPrevented &&\n\t\tevent.button === 0 &&\n\t\t!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n\t);\n}\n\nexport function createCounter() {\n\tlet i = 0;\n\t/**\n\t * Returns an id and increments the internal state\n\t * @returns {number}\n\t */\n\treturn () => i++;\n}\n\n/**\n * Create a globally unique id\n *\n * @returns {string} An id\n */\nexport function createGlobalId() {\n\treturn Math.random().toString(36).substring(2);\n}\n\nexport function findClosest(tagName, element) {\n\twhile (element && element.tagName !== tagName) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\telement = element.parentNode;\n\t}\n\treturn element;\n}\n\nexport const isSSR = typeof window === \"undefined\";\n\nexport function addListener(target, type, handler) {\n\ttarget.addEventListener(type, handler);\n\treturn () => target.removeEventListener(type, handler);\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/*\n * Adapted from https://github.com/EmilTholin/svelte-routing\n *\n * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n */\n\nconst createKey = ctxName => `@@svnav-ctx__${ctxName}`;\n\n// Use strings instead of objects, so different versions of\n// svelte-navigator can potentially still work together\nexport const LOCATION = createKey(\"LOCATION\");\nexport const ROUTER = createKey(\"ROUTER\");\nexport const ROUTE = createKey(\"ROUTE\");\nexport const ROUTE_PARAMS = createKey(\"ROUTE_PARAMS\");\nexport const FOCUS_ELEM = createKey(\"FOCUS_ELEM\");\n","export const paramRegex = /^:(.+)/;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport const startsWith = (string, search) =>\n\tstring.substr(0, search.length) === search;\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isRootSegment = segment => segment === \"\";\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isDynamic = segment => paramRegex.test(segment);\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nexport const isSplat = segment => segment[0] === \"*\";\n\n/**\n * Strip potention splat and splatname of the end of a path\n * @param {string} str\n * @return {string}\n */\nexport const stripSplat = str => str.replace(/\\*.*$/, \"\");\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nexport const stripSlashes = str => str.replace(/(^\\/+|\\/+$)/g, \"\");\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nexport function segmentize(uri, filterFalsy = false) {\n\tconst segments = stripSlashes(uri).split(\"/\");\n\treturn filterFalsy ? segments.filter(Boolean) : segments;\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nexport const addQuery = (pathname, query) =>\n\tpathname + (query ? `?${query}` : \"\");\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nexport function combinePaths(basepath, path) {\n\tconst barePath =\n\t\tpath === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`;\n\treturn `${stripSlashes(barePath)}/`;\n}\n\n/**\n * Normalizes a basepath\n *\n * @param {string} path\n * @returns {string}\n *\n * @example\n * normalizePath(\"base/path/\") // -> \"/base/path\"\n */\nexport const normalizePath = path => `/${stripSlashes(path)}`;\n\n/**\n * Joins and normalizes multiple path fragments\n *\n * @param {...string} pathFragments\n * @returns {string}\n */\nexport function join(...pathFragments) {\n\tconst joinFragment = fragment => segmentize(fragment, true).join(\"/\");\n\tconst joinedSegments = pathFragments.map(joinFragment).join(\"/\");\n\treturn normalizePath(joinedSegments);\n}\n","import { isFunction } from \"./utils\";\n\n// We start from 1 here, so we can check if an origin id has been passed\n// by using `originId || <fallback>`\nexport const LINK_ID = 1;\nexport const ROUTE_ID = 2;\nexport const ROUTER_ID = 3;\nexport const USE_FOCUS_ID = 4;\nexport const USE_LOCATION_ID = 5;\nexport const USE_MATCH_ID = 6;\nexport const USE_NAVIGATE_ID = 7;\nexport const USE_PARAMS_ID = 8;\nexport const USE_RESOLVABLE_ID = 9;\nexport const USE_RESOLVE_ID = 10;\nexport const NAVIGATE_ID = 11;\n\nconst labels = {\n\t[LINK_ID]: \"Link\",\n\t[ROUTE_ID]: \"Route\",\n\t[ROUTER_ID]: \"Router\",\n\t[USE_FOCUS_ID]: \"useFocus\",\n\t[USE_LOCATION_ID]: \"useLocation\",\n\t[USE_MATCH_ID]: \"useMatch\",\n\t[USE_NAVIGATE_ID]: \"useNavigate\",\n\t[USE_PARAMS_ID]: \"useParams\",\n\t[USE_RESOLVABLE_ID]: \"useResolvable\",\n\t[USE_RESOLVE_ID]: \"useResolve\",\n\t[NAVIGATE_ID]: \"navigate\",\n};\n\nexport const createLabel = labelId => labels[labelId];\n\nexport function createIdentifier(labelId, props) {\n\tlet attr;\n\tif (labelId === ROUTE_ID) {\n\t\tattr = props.path ? `path=\"${props.path}\"` : \"default\";\n\t} else if (labelId === LINK_ID) {\n\t\tattr = `to=\"${props.to}\"`;\n\t} else if (labelId === ROUTER_ID) {\n\t\tattr = `basepath=\"${props.basepath || \"\"}\"`;\n\t}\n\treturn `<${createLabel(labelId)} ${attr || \"\"} />`;\n}\n\nexport function createMessage(labelId, message, props, originId) {\n\tconst origin = props && createIdentifier(originId || labelId, props);\n\tconst originMsg = origin ? `\\n\\nOccurred in: ${origin}` : \"\";\n\tconst label = createLabel(labelId);\n\tconst msg = isFunction(message) ? message(label) : message;\n\treturn `<${label}> ${msg}${originMsg}`;\n}\n\nexport const createMessageHandler = handler => (...args) =>\n\thandler(createMessage(...args));\n\nexport const fail = createMessageHandler(message => {\n\tthrow new Error(message);\n});\n\n// eslint-disable-next-line no-console\nexport const warn = createMessageHandler(console.warn);\n","import {\n\tsegmentize,\n\tjoin,\n\taddQuery,\n\tstartsWith,\n\tparamRegex,\n\tisSplat,\n\tisRootSegment,\n\tisDynamic,\n\tstripSplat,\n\tnormalizePath,\n} from \"./paths\";\nimport { ROUTER_ID, fail } from \"./warning\";\nimport { isUndefined } from \"./utils\";\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nexport function rankRoute(route, index) {\n\tconst score = route.default\n\t\t? 0\n\t\t: segmentize(route.fullPath).reduce((acc, segment) => {\n\t\t\t\tlet nextScore = acc;\n\t\t\t\tnextScore += SEGMENT_POINTS;\n\n\t\t\t\tif (isRootSegment(segment)) {\n\t\t\t\t\tnextScore += ROOT_POINTS;\n\t\t\t\t} else if (isDynamic(segment)) {\n\t\t\t\t\tnextScore += DYNAMIC_POINTS;\n\t\t\t\t} else if (isSplat(segment)) {\n\t\t\t\t\tnextScore -= SEGMENT_POINTS + SPLAT_PENALTY;\n\t\t\t\t} else {\n\t\t\t\t\tnextScore += STATIC_POINTS;\n\t\t\t\t}\n\n\t\t\t\treturn nextScore;\n\t\t  }, 0);\n\n\treturn { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nexport function rankRoutes(routes) {\n\treturn (\n\t\troutes\n\t\t\t.map(rankRoute)\n\t\t\t// If two routes have the exact same score, we go by index instead\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.score < b.score) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a.score > b.score) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn a.index - b.index;\n\t\t\t})\n\t);\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { fullPath, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nexport function pick(routes, uri) {\n\tlet bestMatch;\n\tlet defaultMatch;\n\n\tconst [uriPathname] = uri.split(\"?\");\n\tconst uriSegments = segmentize(uriPathname);\n\tconst isRootUri = uriSegments[0] === \"\";\n\tconst ranked = rankRoutes(routes);\n\n\tfor (let i = 0, l = ranked.length; i < l; i++) {\n\t\tconst { route } = ranked[i];\n\t\tlet missed = false;\n\t\tconst params = {};\n\n\t\t// eslint-disable-next-line no-shadow\n\t\tconst createMatch = uri => ({ ...route, params, uri });\n\n\t\tif (route.default) {\n\t\t\tdefaultMatch = createMatch(uri);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst routeSegments = segmentize(route.fullPath);\n\t\tconst max = Math.max(uriSegments.length, routeSegments.length);\n\t\tlet index = 0;\n\n\t\tfor (; index < max; index++) {\n\t\t\tconst routeSegment = routeSegments[index];\n\t\t\tconst uriSegment = uriSegments[index];\n\n\t\t\tif (!isUndefined(routeSegment) && isSplat(routeSegment)) {\n\t\t\t\t// Hit a splat, just grab the rest, and return a match\n\t\t\t\t// uri:   /files/documents/work\n\t\t\t\t// route: /files/* or /files/*splatname\n\t\t\t\tconst splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n\t\t\t\tparams[splatName] = uriSegments\n\t\t\t\t\t.slice(index)\n\t\t\t\t\t.map(decodeURIComponent)\n\t\t\t\t\t.join(\"/\");\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (isUndefined(uriSegment)) {\n\t\t\t\t// URI is shorter than the route, no match\n\t\t\t\t// uri:   /users\n\t\t\t\t// route: /users/:userId\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst dynamicMatch = paramRegex.exec(routeSegment);\n\n\t\t\tif (dynamicMatch && !isRootUri) {\n\t\t\t\tconst value = decodeURIComponent(uriSegment);\n\t\t\t\tparams[dynamicMatch[1]] = value;\n\t\t\t} else if (routeSegment !== uriSegment) {\n\t\t\t\t// Current segments don't match, not dynamic, not splat, so no match\n\t\t\t\t// uri:   /users/123/settings\n\t\t\t\t// route: /users/:id/profile\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!missed) {\n\t\t\tbestMatch = createMatch(join(...uriSegments.slice(0, index)));\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn bestMatch || defaultMatch || null;\n}\n\n/**\n * Check if the `route.fullPath` matches the `uri`.\n * @param {Object} route\n * @param {string} uri\n * @return {?object}\n */\nexport function match(route, uri) {\n\treturn pick([route], uri);\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nexport function resolve(to, base) {\n\t// /foo/bar, /baz/qux => /foo/bar\n\tif (startsWith(to, \"/\")) {\n\t\treturn to;\n\t}\n\n\tconst [toPathname, toQuery] = to.split(\"?\");\n\tconst [basePathname] = base.split(\"?\");\n\tconst toSegments = segmentize(toPathname);\n\tconst baseSegments = segmentize(basePathname);\n\n\t// ?a=b, /users?b=c => /users?a=b\n\tif (toSegments[0] === \"\") {\n\t\treturn addQuery(basePathname, toQuery);\n\t}\n\n\t// profile, /users/789 => /users/789/profile\n\tif (!startsWith(toSegments[0], \".\")) {\n\t\tconst pathname = baseSegments.concat(toSegments).join(\"/\");\n\t\treturn addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n\t}\n\n\t// ./       , /users/123 => /users/123\n\t// ../      , /users/123 => /users\n\t// ../..    , /users/123 => /\n\t// ../../one, /a/b/c/d   => /a/b/one\n\t// .././one , /a/b/c/d   => /a/b/c/one\n\tconst allSegments = baseSegments.concat(toSegments);\n\tconst segments = [];\n\n\tallSegments.forEach(segment => {\n\t\tif (segment === \"..\") {\n\t\t\tsegments.pop();\n\t\t} else if (segment !== \".\") {\n\t\t\tsegments.push(segment);\n\t\t}\n\t});\n\n\treturn addQuery(`/${segments.join(\"/\")}`, toQuery);\n}\n\n/**\n * Normalizes a location for consumption by `Route` children and the `Router`.\n * It removes the apps basepath from the pathname\n * and sets default values for `search` and `hash` properties.\n *\n * @param {Object} location The current global location supplied by the history component\n * @param {string} basepath The applications basepath (i.e. when serving from a subdirectory)\n *\n * @returns The normalized location\n */\nexport function normalizeLocation(location, basepath) {\n\tconst { pathname, hash = \"\", search = \"\", state } = location;\n\tconst baseSegments = segmentize(basepath, true);\n\tconst pathSegments = segmentize(pathname, true);\n\twhile (baseSegments.length) {\n\t\tif (baseSegments[0] !== pathSegments[0]) {\n\t\t\tfail(\n\t\t\t\tROUTER_ID,\n\t\t\t\t`Invalid state: All locations must begin with the basepath \"${basepath}\", found \"${pathname}\"`,\n\t\t\t);\n\t\t}\n\t\tbaseSegments.shift();\n\t\tpathSegments.shift();\n\t}\n\treturn {\n\t\tpathname: join(...pathSegments),\n\t\thash,\n\t\tsearch,\n\t\tstate,\n\t};\n}\n\nconst normalizeUrlFragment = frag => (frag.length === 1 ? \"\" : frag);\n\n/**\n * Creates a location object from an url.\n * It is used to create a location from the url prop used in SSR\n *\n * @param {string} url The url string (e.g. \"/path/to/somewhere\")\n *\n * @returns {{ pathname: string; search: string; hash: string }} The location\n */\nexport function createLocation(url) {\n\tconst searchIndex = url.indexOf(\"?\");\n\tconst hashIndex = url.indexOf(\"#\");\n\tconst hasSearchIndex = searchIndex !== -1;\n\tconst hasHashIndex = hashIndex !== -1;\n\tconst hash = hasHashIndex ? normalizeUrlFragment(url.substr(hashIndex)) : \"\";\n\tconst pathnameAndSearch = hasHashIndex ? url.substr(0, hashIndex) : url;\n\tconst search = hasSearchIndex\n\t\t? normalizeUrlFragment(pathnameAndSearch.substr(searchIndex))\n\t\t: \"\";\n\tconst pathname = hasSearchIndex\n\t\t? pathnameAndSearch.substr(0, searchIndex)\n\t\t: pathnameAndSearch;\n\treturn { pathname, search, hash };\n}\n\n/**\n * Resolves a link relative to the parent Route and the Routers basepath.\n *\n * @param {string} path The given path, that will be resolved\n * @param {string} routeBase The current Routes base path\n * @param {string} appBase The basepath of the app. Used, when serving from a subdirectory\n * @returns {string} The resolved path\n *\n * @example\n * resolveLink(\"relative\", \"/routeBase\", \"/\") // -> \"/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/\") // -> \"/absolute\"\n * resolveLink(\"relative\", \"/routeBase\", \"/base\") // -> \"/base/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/base\") // -> \"/base/absolute\"\n */\nexport function resolveLink(path, routeBase, appBase) {\n\treturn join(appBase, resolve(path, routeBase));\n}\n\n/**\n * Get the uri for a Route, by matching it against the current location.\n *\n * @param {string} routePath The Routes resolved path\n * @param {string} pathname The current locations pathname\n */\nexport function extractBaseUri(routePath, pathname) {\n\tconst fullPath = normalizePath(stripSplat(routePath));\n\tconst baseSegments = segmentize(fullPath, true);\n\tconst pathSegments = segmentize(pathname, true).slice(0, baseSegments.length);\n\tconst routeMatch = match({ fullPath }, join(...pathSegments));\n\treturn routeMatch && routeMatch.uri;\n}\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nimport { createLocation } from \"./routes\";\nimport { createGlobalId, isSSR, isNumber, addListener } from \"./utils\";\nimport { warn, NAVIGATE_ID } from \"./warning\";\n\nconst POP = \"POP\";\nconst PUSH = \"PUSH\";\nconst REPLACE = \"REPLACE\";\n\nfunction getLocation(source) {\n\treturn {\n\t\t...source.location,\n\t\tpathname: encodeURI(decodeURI(source.location.pathname)),\n\t\tstate: source.history.state,\n\t\t_key: (source.history.state && source.history.state._key) || \"initial\",\n\t};\n}\n\nfunction createHistory(source) {\n\tlet listeners = [];\n\tlet location = getLocation(source);\n\tlet action = POP;\n\n\tconst notifyListeners = (listenerFns = listeners) =>\n\t\tlistenerFns.forEach(listener => listener({ location, action }));\n\n\treturn {\n\t\tget location() {\n\t\t\treturn location;\n\t\t},\n\t\tlisten(listener) {\n\t\t\tlisteners.push(listener);\n\n\t\t\tconst popstateListener = () => {\n\t\t\t\tlocation = getLocation(source);\n\t\t\t\taction = POP;\n\t\t\t\tnotifyListeners([listener]);\n\t\t\t};\n\n\t\t\t// Call listener when it is registered\n\t\t\tnotifyListeners([listener]);\n\n\t\t\tconst unlisten = addListener(source, \"popstate\", popstateListener);\n\t\t\treturn () => {\n\t\t\t\tunlisten();\n\t\t\t\tlisteners = listeners.filter(fn => fn !== listener);\n\t\t\t};\n\t\t},\n\t\t/**\n\t\t * Navigate to a new absolute route.\n\t\t *\n\t\t * @param {string|number} to The path to navigate to.\n\t\t *\n\t\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t\t * @param {Object} options\n\t\t * @param {*} [options.state] The state will be accessible through `location.state`\n\t\t * @param {boolean} [options.replace=false] Replace the current entry in the history\n\t\t * stack, instead of pushing on a new one\n\t\t */\n\t\tnavigate(to, options) {\n\t\t\tconst { state = {}, replace = false } = options || {};\n\t\t\taction = replace ? REPLACE : PUSH;\n\t\t\tif (isNumber(to)) {\n\t\t\t\tif (options) {\n\t\t\t\t\twarn(\n\t\t\t\t\t\tNAVIGATE_ID,\n\t\t\t\t\t\t\"Navigation options (state or replace) are not supported, \" +\n\t\t\t\t\t\t\t\"when passing a number as the first argument to navigate. \" +\n\t\t\t\t\t\t\t\"They are ignored.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\taction = POP;\n\t\t\t\tsource.history.go(to);\n\t\t\t} else {\n\t\t\t\tconst keyedState = { ...state, _key: createGlobalId() };\n\t\t\t\t// try...catch iOS Safari limits to 100 pushState calls\n\t\t\t\ttry {\n\t\t\t\t\tsource.history[replace ? \"replaceState\" : \"pushState\"](\n\t\t\t\t\t\tkeyedState,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tto,\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsource.location[replace ? \"replace\" : \"assign\"](to);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlocation = getLocation(source);\n\t\t\tnotifyListeners();\n\t\t},\n\t};\n}\n\nfunction createStackFrame(state, uri) {\n\treturn { ...createLocation(uri), state };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n\tlet index = 0;\n\tlet stack = [createStackFrame(null, initialPathname)];\n\n\treturn {\n\t\t// This is just for testing...\n\t\tget entries() {\n\t\t\treturn stack;\n\t\t},\n\t\tget location() {\n\t\t\treturn stack[index];\n\t\t},\n\t\taddEventListener() {},\n\t\tremoveEventListener() {},\n\t\thistory: {\n\t\t\tget state() {\n\t\t\t\treturn stack[index].state;\n\t\t\t},\n\t\t\tpushState(state, title, uri) {\n\t\t\t\tindex++;\n\t\t\t\t// Throw away anything in the stack with an index greater than the current index.\n\t\t\t\t// This happens, when we go back using `go(-n)`. The index is now less than `stack.length`.\n\t\t\t\t// If we call `go(+n)` the stack entries with an index greater than the current index can\n\t\t\t\t// be reused.\n\t\t\t\t// However, if we navigate to a path, instead of a number, we want to create a new branch\n\t\t\t\t// of navigation.\n\t\t\t\tstack = stack.slice(0, index);\n\t\t\t\tstack.push(createStackFrame(state, uri));\n\t\t\t},\n\t\t\treplaceState(state, title, uri) {\n\t\t\t\tstack[index] = createStackFrame(state, uri);\n\t\t\t},\n\t\t\tgo(to) {\n\t\t\t\tconst newIndex = index + to;\n\t\t\t\tif (newIndex < 0 || newIndex > stack.length - 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tindex = newIndex;\n\t\t\t},\n\t\t},\n\t};\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = !!(\n\t!isSSR &&\n\twindow.document &&\n\twindow.document.createElement\n);\n// Use memory history in iframes (for example in Svelte REPL)\nconst isEmbeddedPage = !isSSR && window.location.origin === \"null\";\nconst globalHistory = createHistory(\n\tcanUseDOM && !isEmbeddedPage ? window : createMemorySource(),\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","import { get } from \"svelte/store\";\nimport { tick } from \"svelte\";\nimport { warn, ROUTER_ID, ROUTE_ID } from \"./warning\";\nimport { addListener } from \"./utils\";\n\n// We need to keep the focus candidate in a separate file, so svelte does\n// not update, when we mutate it.\n// Also, we need a single global reference, because taking focus needs to\n// work globally, even if we have multiple top level routers\n// eslint-disable-next-line import/no-mutable-exports\nexport let focusCandidate = null;\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let initialNavigation = true;\n\n/**\n * Check if RouterA is above RouterB in the document\n * @param {number} routerIdA The first Routers id\n * @param {number} routerIdB The second Routers id\n */\nfunction isAbove(routerIdA, routerIdB) {\n\tconst routerMarkers = document.querySelectorAll(\"[data-svnav-router]\");\n\tfor (let i = 0; i < routerMarkers.length; i++) {\n\t\tconst node = routerMarkers[i];\n\t\tconst currentId = Number(node.dataset.svnavRouter);\n\t\tif (currentId === routerIdA) return true;\n\t\tif (currentId === routerIdB) return false;\n\t}\n\treturn false;\n}\n\n/**\n * Check if a Route candidate is the best choice to move focus to,\n * and store the best match.\n * @param {{\n     level: number;\n     routerId: number;\n     route: {\n       id: number;\n       focusElement: import(\"svelte/store\").Readable<Promise<Element>|null>;\n     }\n   }} item A Route candidate, that updated and is visible after a navigation\n */\nexport function pushFocusCandidate(item) {\n\tif (\n\t\t// Best candidate if it's the only candidate...\n\t\t!focusCandidate ||\n\t\t// Route is nested deeper, than previous candidate\n\t\t// -> Route change was triggered in the deepest affected\n\t\t// Route, so that's were focus should move to\n\t\titem.level > focusCandidate.level ||\n\t\t// If the level is identical, we want to focus the first Route in the document,\n\t\t// so we pick the first Router lookin from page top to page bottom.\n\t\t(item.level === focusCandidate.level &&\n\t\t\tisAbove(item.routerId, focusCandidate.routerId))\n\t) {\n\t\tfocusCandidate = item;\n\t}\n}\n\n/**\n * Reset the focus candidate.\n */\nexport function clearFocusCandidate() {\n\tfocusCandidate = null;\n}\n\nexport function initialNavigationOccurred() {\n\tinitialNavigation = false;\n}\n\n/*\n * `focus` Adapted from https://github.com/oaf-project/oaf-side-effects/blob/master/src/index.ts\n *\n * https://github.com/oaf-project/oaf-side-effects/blob/master/LICENSE\n */\nexport function focus(elem) {\n\tif (!elem) return false;\n\tconst TABINDEX = \"tabindex\";\n\ttry {\n\t\tif (!elem.hasAttribute(TABINDEX)) {\n\t\t\telem.setAttribute(TABINDEX, \"-1\");\n\t\t\tlet unlisten;\n\t\t\t// We remove tabindex after blur to avoid weird browser behavior\n\t\t\t// where a mouse click can activate elements with tabindex=\"-1\".\n\t\t\tconst blurListener = () => {\n\t\t\t\telem.removeAttribute(TABINDEX);\n\t\t\t\tunlisten();\n\t\t\t};\n\t\t\tunlisten = addListener(elem, \"blur\", blurListener);\n\t\t}\n\t\telem.focus();\n\t\treturn document.activeElement === elem;\n\t} catch (e) {\n\t\t// Apparently trying to focus a disabled element in IE can throw.\n\t\t// See https://stackoverflow.com/a/1600194/2476884\n\t\treturn false;\n\t}\n}\n\nexport function isEndMarker(elem, id) {\n\treturn Number(elem.dataset.svnavRouteEnd) === id;\n}\n\nexport function isHeading(elem) {\n\treturn /^H[1-6]$/i.test(elem.tagName);\n}\n\nfunction query(selector, parent = document) {\n\treturn parent.querySelector(selector);\n}\n\nexport function queryHeading(id) {\n\tconst marker = query(`[data-svnav-route-start=\"${id}\"]`);\n\tlet current = marker.nextElementSibling;\n\twhile (!isEndMarker(current, id)) {\n\t\tif (isHeading(current)) {\n\t\t\treturn current;\n\t\t}\n\t\tconst heading = query(\"h1,h2,h3,h4,h5,h6\", current);\n\t\tif (heading) {\n\t\t\treturn heading;\n\t\t}\n\t\tcurrent = current.nextElementSibling;\n\t}\n\treturn null;\n}\n\nexport function handleFocus(route) {\n\tPromise.resolve(get(route.focusElement)).then(elem => {\n\t\tconst focusElement = elem || queryHeading(route.id);\n\t\tif (!focusElement) {\n\t\t\twarn(\n\t\t\t\tROUTER_ID,\n\t\t\t\t\"Could not find an element to focus. \" +\n\t\t\t\t\t\"You should always render a header for accessibility reasons, \" +\n\t\t\t\t\t'or set a custom focus element via the \"useFocus\" hook. ' +\n\t\t\t\t\t\"If you don't want this Route or Router to manage focus, \" +\n\t\t\t\t\t'pass \"primary={false}\" to it.',\n\t\t\t\troute,\n\t\t\t\tROUTE_ID,\n\t\t\t);\n\t\t}\n\t\tconst headingFocused = focus(focusElement);\n\t\tif (headingFocused) return;\n\t\tfocus(document.documentElement);\n\t});\n}\n\nexport const createTriggerFocus = (a11yConfig, announcementText, location) => (\n\tmanageFocus,\n\tannounceNavigation,\n) =>\n\t// Wait until the dom is updated, so we can look for headings\n\ttick().then(() => {\n\t\tif (!focusCandidate || initialNavigation) {\n\t\t\tinitialNavigationOccurred();\n\t\t\treturn;\n\t\t}\n\t\tif (manageFocus) {\n\t\t\thandleFocus(focusCandidate.route);\n\t\t}\n\t\tif (a11yConfig.announcements && announceNavigation) {\n\t\t\tconst { path, fullPath, meta, params, uri } = focusCandidate.route;\n\t\t\tconst announcementMessage = a11yConfig.createAnnouncement(\n\t\t\t\t{ path, fullPath, meta, params, uri },\n\t\t\t\tget(location),\n\t\t\t);\n\t\t\tPromise.resolve(announcementMessage).then(message => {\n\t\t\t\tannouncementText.set(message);\n\t\t\t});\n\t\t}\n\t\tclearFocusCandidate();\n\t});\n\nexport const visuallyHiddenStyle =\n\t\"position:fixed;\" +\n\t\"top:-1px;\" +\n\t\"left:0;\" +\n\t\"width:1px;\" +\n\t\"height:1px;\" +\n\t\"padding:0;\" +\n\t\"overflow:hidden;\" +\n\t\"clip:rect(0,0,0,0);\" +\n\t\"white-space:nowrap;\" +\n\t\"border:0;\";\n","<script context=\"module\">\n\t// eslint-disable-next-line import/order\n\timport { createCounter } from \"./utils\";\n\n\tconst createId = createCounter();\n</script>\n\n<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { getContext, setContext, onMount } from \"svelte\";\n\timport { writable } from \"svelte/store\";\n\timport { LOCATION, ROUTER } from \"./contexts\";\n\timport { globalHistory } from \"./history\";\n\timport { normalizePath } from \"./paths\";\n\timport { pick, match, normalizeLocation, createLocation } from \"./routes\";\n\timport { isSSR } from \"./utils\";\n\timport { warn, ROUTER_ID } from \"./warning\";\n\timport {\n\t\tpushFocusCandidate,\n\t\tvisuallyHiddenStyle,\n\t\tcreateTriggerFocus,\n\t} from \"./a11y\";\n\n\tconst defaultBasepath = \"/\";\n\n\texport let basepath = defaultBasepath;\n\texport let url = null;\n\texport let history = globalHistory;\n\texport let primary = true;\n\texport let a11y = {};\n\n\tconst a11yConfig = {\n\t\tcreateAnnouncement: route => `Navigated to ${route.uri}`,\n\t\tannouncements: true,\n\t\t...a11y,\n\t};\n\n\t// Remember the initial `basepath`, so we can fire a warning\n\t// when the user changes it later\n\tconst initialBasepath = basepath;\n\tconst normalizedBasepath = normalizePath(basepath);\n\n\tconst locationContext = getContext(LOCATION);\n\tconst routerContext = getContext(ROUTER);\n\n\tconst isTopLevelRouter = !locationContext;\n\tconst routerId = createId();\n\n\tconst manageFocus = primary && !(routerContext && !routerContext.manageFocus);\n\tconst announcementText = writable(\"\");\n\n\tconst routes = writable([]);\n\tconst activeRoute = writable(null);\n\t// Used in SSR to synchronously set that a Route is active.\n\tlet hasActiveRoute = false;\n\n\t// Nesting level of router.\n\t// We will need this to identify sibling routers, when moving\n\t// focus on navigation, so we can focus the first possible router\n\tconst level = isTopLevelRouter ? 0 : routerContext.level + 1;\n\n\t// If we're running an SSR we force the location to the `url` prop\n\tconst getInitialLocation = () =>\n\t\tnormalizeLocation(\n\t\t\tisSSR ? createLocation(url) : history.location,\n\t\t\tnormalizedBasepath,\n\t\t);\n\tconst location = isTopLevelRouter\n\t\t? writable(getInitialLocation())\n\t\t: locationContext;\n\tconst prevLocation = writable($location);\n\n\tconst triggerFocus = createTriggerFocus(\n\t\ta11yConfig,\n\t\tannouncementText,\n\t\tlocation,\n\t);\n\n\tconst createRouteFilter = routeId => routeList =>\n\t\trouteList.filter(routeItem => routeItem.id !== routeId);\n\n\tfunction registerRoute(route) {\n\t\tif (isSSR) {\n\t\t\t// In SSR we should set the activeRoute immediately if it is a match.\n\t\t\t// If there are more Routes being registered after a match is found,\n\t\t\t// we just skip them.\n\t\t\tif (hasActiveRoute) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst matchingRoute = match(route, $location.pathname);\n\t\t\tif (matchingRoute) {\n\t\t\t\thasActiveRoute = true;\n\t\t\t\t// Return the match in SSR mode, so the matched Route can use it immediatly.\n\t\t\t\t// Waiting for activeRoute to update does not work, because it updates\n\t\t\t\t// after the Route is initialized\n\t\t\t\treturn matchingRoute; // eslint-disable-line consistent-return\n\t\t\t}\n\t\t} else {\n\t\t\troutes.update(prevRoutes => {\n\t\t\t\t// Remove an old version of the updated route,\n\t\t\t\t// before pushing the new version\n\t\t\t\tconst nextRoutes = createRouteFilter(route.id)(prevRoutes);\n\t\t\t\tnextRoutes.push(route);\n\t\t\t\treturn nextRoutes;\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction unregisterRoute(routeId) {\n\t\troutes.update(createRouteFilter(routeId));\n\t}\n\n\tif (!isTopLevelRouter && basepath !== defaultBasepath) {\n\t\twarn(\n\t\t\tROUTER_ID,\n\t\t\t'Only top-level Routers can have a \"basepath\" prop. It is ignored.',\n\t\t\t{ basepath },\n\t\t);\n\t}\n\t$: if (basepath !== initialBasepath) {\n\t\twarn(ROUTER_ID, 'You cannot change the \"basepath\" prop. It is ignored.');\n\t}\n\n\t// This reactive statement will be run when the Router is created\n\t// when there are no Routes and then again the following tick, so it\n\t// will not find an active Route in SSR and in the browser it will only\n\t// pick an active Route after all Routes have been registered.\n\t$: {\n\t\tconst bestMatch = pick($routes, $location.pathname);\n\t\tactiveRoute.set(bestMatch);\n\t}\n\n\t// Manage focus and announce navigation to screen reader users\n\t$: {\n\t\tif (isTopLevelRouter) {\n\t\t\tconst hasHash = !!$location.hash;\n\t\t\t// When a hash is present in the url, we skip focus management, because\n\t\t\t// focusing a different element will prevent in-page jumps (See #3)\n\t\t\tconst shouldManageFocus = !hasHash && manageFocus;\n\t\t\t// We don't want to make an announcement, when the hash changes,\n\t\t\t// but the active route stays the same\n\t\t\tconst announceNavigation =\n\t\t\t\t!hasHash || $location.pathname !== $prevLocation.pathname;\n\t\t\ttriggerFocus(shouldManageFocus, announceNavigation);\n\t\t}\n\t}\n\n\t// Queue matched Route, so top level Router can decide which Route to focus.\n\t// Non primary Routers should just be ignored\n\t$: if (manageFocus && $activeRoute && $activeRoute.primary) {\n\t\tpushFocusCandidate({ level, routerId, route: $activeRoute });\n\t}\n\n\tif (isTopLevelRouter) {\n\t\t// The topmost Router in the tree is responsible for updating\n\t\t// the location store and supplying it through context.\n\t\tonMount(() => {\n\t\t\tconst unlisten = history.listen(changedHistory => {\n\t\t\t\tconst normalizedLocation = normalizeLocation(\n\t\t\t\t\tchangedHistory.location,\n\t\t\t\t\tnormalizedBasepath,\n\t\t\t\t);\n\t\t\t\tprevLocation.set($location);\n\t\t\t\tlocation.set(normalizedLocation);\n\t\t\t});\n\n\t\t\treturn unlisten;\n\t\t});\n\n\t\tsetContext(LOCATION, location);\n\t}\n\n\tsetContext(ROUTER, {\n\t\tactiveRoute,\n\t\tregisterRoute,\n\t\tunregisterRoute,\n\t\tmanageFocus,\n\t\tlevel,\n\t\tid: routerId,\n\t\thistory: isTopLevelRouter ? history : routerContext.history,\n\t\tbasepath: isTopLevelRouter ? normalizedBasepath : routerContext.basepath,\n\t});\n</script>\n\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-router={routerId} />\n\n<slot />\n\n{#if isTopLevelRouter && manageFocus && a11yConfig.announcements}\n\t<div\n\t\trole=\"status\"\n\t\taria-atomic=\"true\"\n\t\taria-live=\"polite\"\n\t\tstyle={visuallyHiddenStyle}\n\t>\n\t\t{$announcementText}\n\t</div>\n{/if}\n","import { getContext, onDestroy, tick } from \"svelte\";\nimport { derived, get, writable } from \"svelte/store\";\nimport { LOCATION, ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\nimport { resolveLink, match, normalizeLocation } from \"./routes\";\nimport { isNumber } from \"./utils\";\nimport {\n\tfail,\n\tcreateLabel,\n\tUSE_FOCUS_ID,\n\tROUTER_ID,\n\tUSE_LOCATION_ID,\n\tROUTE_ID,\n\tUSE_RESOLVE_ID,\n\tUSE_RESOLVABLE_ID,\n\tUSE_NAVIGATE_ID,\n\tUSE_MATCH_ID,\n\tUSE_PARAMS_ID,\n} from \"./warning\";\n\n/**\n * Check if a component or hook have been created outside of a\n * context providing component\n * @param {number} componentId\n * @param {*} props\n * @param {string?} ctxKey\n * @param {number?} ctxProviderId\n */\nexport function usePreflightCheck(\n\tcomponentId,\n\tprops,\n\tctxKey = ROUTER,\n\tctxProviderId = ROUTER_ID,\n) {\n\tconst ctx = getContext(ctxKey);\n\tif (!ctx) {\n\t\tfail(\n\t\t\tcomponentId,\n\t\t\tlabel =>\n\t\t\t\t`You cannot use ${label} outside of a ${createLabel(ctxProviderId)}.`,\n\t\t\tprops,\n\t\t);\n\t}\n}\n\nconst toReadonly = ctx => {\n\tconst { subscribe } = getContext(ctx);\n\treturn { subscribe };\n};\n\n/**\n * Access the current location via a readable store.\n * @returns {import(\"svelte/store\").Readable<{\n    pathname: string;\n    search: string;\n    hash: string;\n    state: {};\n  }>}\n *\n * @example\n  ```html\n  <script>\n    import { useLocation } from \"svelte-navigator\";\n\n    const location = useLocation();\n\n    $: console.log($location);\n    // {\n    //   pathname: \"/blog\",\n    //   search: \"?id=123\",\n    //   hash: \"#comments\",\n    //   state: {}\n    // }\n  </script>\n  ```\n */\nexport function useLocation() {\n\tusePreflightCheck(USE_LOCATION_ID);\n\treturn toReadonly(LOCATION);\n}\n\n/**\n * @typedef {{\n    path: string;\n    fullPath: string;\n    uri: string;\n    params: {};\n  }} RouteMatch\n */\n\n/**\n * @typedef {import(\"svelte/store\").Readable<RouteMatch|null>} RouteMatchStore\n */\n\n/**\n * Access the history of top level Router.\n */\nexport function useHistory() {\n\tconst { history } = getContext(ROUTER);\n\treturn history;\n}\n\n/**\n * Access the base of the parent Route.\n */\nexport function useRouteBase() {\n\tconst route = getContext(ROUTE);\n\treturn route ? derived(route, _route => _route.base) : writable(\"/\");\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {(path: string) => string}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolve } from \"svelte-navigator\";\n\n    const resolve = useResolve();\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`\n    const resolvedLink = resolve(\"relativePath\");\n  </script>\n\n  <a href={resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolve() {\n\tusePreflightCheck(USE_RESOLVE_ID);\n\tconst routeBase = useRouteBase();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\t/**\n\t * Resolves the path relative to the current route and basepath.\n\t *\n\t * @param {string} path The path to resolve\n\t * @returns {string} The resolved path\n\t */\n\tconst resolve = path => resolveLink(path, get(routeBase), appBase);\n\treturn resolve;\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {import(\"svelte/store\").Readable<string>}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolvable } from \"svelte-navigator\";\n\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`.\n    const resolvedLink = useResolvable(\"relativePath\");\n  </script>\n\n  <a href={$resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolvable(path) {\n\tusePreflightCheck(USE_RESOLVABLE_ID);\n\tconst routeBase = useRouteBase();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\treturn derived(routeBase, _routeBase =>\n\t\tresolveLink(path, _routeBase, appBase),\n\t);\n}\n\n/**\n * A hook, that returns a context-aware version of `navigate`.\n * It will automatically resolve the given link relative to the current Route.\n * It will also resolve a link against the `basepath` of the Router.\n *\n * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router>\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /absolutePath\n  </button>\n  ```\n  *\n  * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router basepath=\"/base\">\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /base/route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /base/absolutePath\n  </button>\n  ```\n */\nexport function useNavigate() {\n\tusePreflightCheck(USE_NAVIGATE_ID);\n\tconst resolve = useResolve();\n\tconst { navigate } = useHistory();\n\t/**\n\t * Navigate to a new route.\n\t * Resolves the link relative to the current route and basepath.\n\t *\n\t * @param {string|number} to The path to navigate to.\n\t *\n\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t * @param {Object} options\n\t * @param {*} [options.state]\n\t * @param {boolean} [options.replace=false]\n\t */\n\tconst navigateRelative = (to, options) => {\n\t\t// If to is a number, we navigate to the target stack entry via `history.go`.\n\t\t// Otherwise resolve the link\n\t\tconst target = isNumber(to) ? to : resolve(to);\n\t\treturn navigate(target, options);\n\t};\n\treturn navigateRelative;\n}\n\n/**\n * Use Svelte Navigators matching without needing to use a Route.\n * Returns a readable store with the potential match,\n * that changes, when the location changes.\n *\n * The provided path will be resolved relatively,\n * as you're used to with all paths in Svelte Navigator\n *\n * @param {string} path The path, to match against.\n * It works just like a Route path\n * @returns {RouteMatchStore} The matched route.\n * Returns `null`, when nothing could be matched\n *\n * @example\n  ```html\n  <script>\n    import { useMatch } from \"svelte-navigator\";\n\n    const relativeMatch = useMatch(\"relative/path/:to/*somewhere\");\n    const absoluteMatch = useMatch(\"/absolute/path/:to/*somewhere\");\n\n    $: console.log($relativeMatch.params.to);\n    $: console.log($absoluteMatch.params.somewhere);\n  </script>\n  ```\n */\nexport function useMatch(path) {\n\tusePreflightCheck(USE_MATCH_ID);\n\tconst location = useLocation();\n\tconst resolve = useResolve();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\tconst resolvedPath = resolve(path);\n\tconst { pathname: fullPath } = normalizeLocation(\n\t\t{ pathname: resolvedPath },\n\t\tappBase,\n\t);\n\treturn derived(location, loc => match({ fullPath, path }, loc.pathname));\n}\n\n/**\n * Access the parent Routes matched params and wildcards\n * @returns {import(\"svelte/store\").Readable<{\n     [param: string]: any;\n   }>} A readable store containing the matched parameters and wildcards\n *\n * @example\n  ```html\n  <!--\n    Somewhere inside <Route path=\"user/:id/*splat\" />\n    with a current url of \"/myApp/user/123/pauls-profile\"\n  -->\n  <script>\n    import { useParams } from \"svelte-navigator\";\n\n    const params = useParams();\n\n    $: console.log($params); // -> { id: \"123\", splat: \"pauls-profile\" }\n  </script>\n\n  <h3>Welcome user {$params.id}! bleep bloop...</h3>\n  ```\n */\nexport function useParams() {\n\tusePreflightCheck(USE_PARAMS_ID, null, ROUTE, ROUTE_ID);\n\treturn toReadonly(ROUTE_PARAMS);\n}\n\n/**\n * Provide a custom element to focus, when the parent route is visited.\n * It returns the `registerFocus` function you can call manually with an\n * Element or use as a Svelte action via the `use` directive.\n *\n * @example\n  ```html\n  <!-- Using `registerFocus` as a Svelte action: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p use:registerFocus>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Calling `registerFocus` manually: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    let focusElement;\n\n    onMount(() => registerFocus(focusElement))\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p bind:this={focusElement}>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Using `registerFocus` asyncronously: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    const lazyImport = import(\"./MyComponent.svelte\").then(module => module.default);\n  </script>\n\n  {#await lazyImport then MyComponent}\n    <MyComponent {registerFocus} />\n  {/await}\n\n  <!-- MyComponent.svelte -->\n  <script>\n    export let registerFocus;\n  </script>\n\n  <h1 use:registerFocus>Hi there!</h1>\n  ```\n */\nexport function useFocus() {\n\tusePreflightCheck(USE_FOCUS_ID, null, ROUTE, ROUTE_ID);\n\tconst location = useLocation();\n\tconst focusElement = getContext(FOCUS_ELEM);\n\n\tlet resolve;\n\tconst unsubscribe = location.subscribe(() => {\n\t\tconst lazyElement = new Promise(_resolve => {\n\t\t\tresolve = _resolve;\n\t\t});\n\t\tfocusElement.set(lazyElement);\n\t});\n\n\tonDestroy(unsubscribe);\n\n\treturn node => {\n\t\tlet unmounted = false;\n\t\tconst innerUnsubscribe = location.subscribe(() => {\n\t\t\ttick().then(() => {\n\t\t\t\tif (!unmounted) {\n\t\t\t\t\tresolve(node);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tunmounted = true;\n\t\t\t\tinnerUnsubscribe();\n\t\t\t},\n\t\t};\n\t};\n}\n","<script context=\"module\">\n\t// eslint-disable-next-line import/order\n\timport { createCounter } from \"./utils\";\n\n\tconst createId = createCounter();\n</script>\n\n<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { getContext, onDestroy, setContext } from \"svelte\";\n\timport { writable, get } from \"svelte/store\";\n\timport Router from \"./Router.svelte\";\n\timport { ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\n\timport {\n\t\tuseLocation,\n\t\tuseNavigate,\n\t\tuseRouteBase,\n\t\tusePreflightCheck,\n\t} from \"./hooks\";\n\timport { isSSR } from \"./utils\";\n\timport { extractBaseUri } from \"./routes\";\n\timport { join } from \"./paths\";\n\timport { ROUTE_ID } from \"./warning\";\n\n\texport let path = \"\";\n\texport let component = null;\n\texport let meta = {};\n\texport let primary = true;\n\n\tusePreflightCheck(ROUTE_ID, $$props);\n\n\tconst id = createId();\n\n\tconst { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n\tconst parentBase = useRouteBase();\n\tconst location = useLocation();\n\tconst focusElement = writable(null);\n\n\t// In SSR we cannot wait for $activeRoute to update,\n\t// so we use the match returned from `registerRoute` instead\n\tlet ssrMatch;\n\n\tconst route = writable();\n\t$: {\n\t\t// The route store will be re-computed whenever props, location or parentBase change\n\t\tconst isDefault = path === \"\";\n\t\tconst rawBase = join($parentBase, path);\n\t\tconst updatedRoute = {\n\t\t\tid,\n\t\t\tpath,\n\t\t\tmeta,\n\t\t\t// If no path prop is given, this Route will act as the default Route\n\t\t\t// that is rendered if no other Route in the Router is a match\n\t\t\tdefault: isDefault,\n\t\t\tfullPath: isDefault ? \"\" : rawBase,\n\t\t\tbase: isDefault\n\t\t\t\t? $parentBase\n\t\t\t\t: extractBaseUri(rawBase, $location.pathname),\n\t\t\tprimary,\n\t\t\tfocusElement,\n\t\t};\n\t\troute.set(updatedRoute);\n\t\t// If we're in SSR mode and the Route matches,\n\t\t// `registerRoute` will return the match\n\t\tssrMatch = registerRoute(updatedRoute);\n\t}\n\n\t$: isActive = !!(ssrMatch || ($activeRoute && $activeRoute.id === id));\n\n\tconst params = writable({});\n\t$: if (isActive) {\n\t\tconst { params: activeParams } = ssrMatch || $activeRoute;\n\t\tparams.set(activeParams);\n\t}\n\n\tsetContext(ROUTE, route);\n\tsetContext(ROUTE_PARAMS, params);\n\tsetContext(FOCUS_ELEM, focusElement);\n\n\t// We need to call useNavigate after the route is set,\n\t// so we can use the routes path for link resolution\n\tconst navigate = useNavigate();\n\n\t// There is no need to unregister Routes in SSR since it will all be\n\t// thrown away anyway\n\tif (!isSSR) {\n\t\tonDestroy(() => unregisterRoute(id));\n\t}\n</script>\n\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-route-start={id} />\n{#if isActive}\n\t<Router {primary}>\n\t\t<!--\n      `$params` always returns `{}` in SSR in Route, because it will\n      update after component initialisation has already happend.\n      `get(params)` always works, but is not reactive, so we can't\n      use it in client rendered mode\n    -->\n\t\t{#if component !== null}\n\t\t\t<svelte:component\n\t\t\t\tthis={component}\n\t\t\t\tlocation={$location}\n\t\t\t\t{navigate}\n\t\t\t\t{...isSSR ? get(params) : $params}\n\t\t\t\t{...$$restProps}\n\t\t\t/>\n\t\t{:else}\n\t\t\t<slot\n\t\t\t\tparams={isSSR ? get(params) : $params}\n\t\t\t\tlocation={$location}\n\t\t\t\t{navigate}\n\t\t\t/>\n\t\t{/if}\n\t</Router>\n{/if}\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-route-end={id} />\n","<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { createEventDispatcher } from \"svelte\";\n\timport {\n\t\tuseLocation,\n\t\tuseResolve,\n\t\tuseHistory,\n\t\tusePreflightCheck,\n\t} from \"./hooks\";\n\timport { shouldNavigate, isFunction } from \"./utils\";\n\timport { startsWith } from \"./paths\";\n\timport { LINK_ID } from \"./warning\";\n\n\texport let to;\n\texport let replace = false;\n\texport let state = {};\n\texport let getProps = null;\n\n\tusePreflightCheck(LINK_ID, $$props);\n\n\tconst location = useLocation();\n\tconst dispatch = createEventDispatcher();\n\tconst resolve = useResolve();\n\tconst { navigate } = useHistory();\n\n\t// We need to pass location here to force re-resolution of the link,\n\t// when the pathname changes. Otherwise we could end up with stale path params,\n\t// when for example an :id changes in the parent Routes path\n\t$: href = resolve(to, $location);\n\t$: isPartiallyCurrent = startsWith($location.pathname, href);\n\t$: isCurrent = href === $location.pathname;\n\t$: ariaCurrent = isCurrent ? { \"aria-current\": \"page\" } : {};\n\t$: props = (() => {\n\t\tif (isFunction(getProps)) {\n\t\t\tconst dynamicProps = getProps({\n\t\t\t\tlocation: $location,\n\t\t\t\thref,\n\t\t\t\tisPartiallyCurrent,\n\t\t\t\tisCurrent,\n\t\t\t});\n\t\t\treturn { ...$$restProps, ...dynamicProps };\n\t\t}\n\t\treturn $$restProps;\n\t})();\n\n\tfunction onClick(event) {\n\t\tdispatch(\"click\", event);\n\n\t\tif (shouldNavigate(event)) {\n\t\t\tevent.preventDefault();\n\t\t\t// Don't push another entry to the history stack when the user\n\t\t\t// clicks on a Link to the page they are currently on.\n\t\t\tconst shouldReplace = isCurrent || replace;\n\t\t\tnavigate(href, { state, replace: shouldReplace });\n\t\t}\n\t}\n</script>\n\n<a {href} {...ariaCurrent} on:click={onClick} {...props}>\n\t<slot />\n</a>\n","import arrowDown from \"./arrowDown.js\";\nimport arrowLeft from \"./arrowLeft.js\";\nimport arrowRight from \"./arrowRight.js\";\nimport arrowUp from \"./arrowUp.js\";\nimport arrowsUpdown from \"./arrowsUpdown.js\";\nimport attention from \"./attention.js\";\nimport burger from \"./burger.js\";\nimport calendar from \"./calendar.js\";\nimport cashbox from \"./cashbox.js\";\nimport cashbox2 from \"./cashbox2.js\";\nimport catalog from \"./catalog.js\";\nimport check from \"./check.js\";\nimport chevronDown from \"./chevronDown.js\";\nimport chevronLeft from \"./chevronLeft.js\";\nimport chevronRight from \"./chevronRight.js\";\nimport chevronUp from \"./chevronUp.js\";\nimport clear from \"./clear.js\";\nimport close from \"./close.js\";\nimport column from \"./column.js\";\nimport copy from \"./copy.js\";\nimport cycle from \"./cycle.js\";\nimport visible from \"./visible.js\";\nimport edit from \"./edit.js\";\nimport favorite from \"./favorite.js\";\nimport favoriteFill from \"./favoriteFill.js\";\nimport file from \"./file.js\";\nimport filter from \"./filter.js\";\nimport history from \"./history.js\";\nimport inputCalendar from \"./inputCalendar.js\";\nimport invisible from \"./invisible.js\";\nimport key from \"./key.js\";\nimport list3 from \"./list3.js\";\nimport loader from \"./loader.js\";\nimport market from \"./market.js\";\nimport message from \"./message.js\";\nimport minus from \"./minus.js\";\nimport moreHorizontal from \"./moreHorizontal.js\";\nimport moreVertical from \"./moreVertical.js\";\nimport phone from \"./phone.js\";\nimport plus from \"./plus.js\";\nimport print from \"./print.js\";\nimport question from \"./question.js\";\nimport rouble from \"./rouble.js\";\nimport save from \"./save.js\";\nimport set from \"./set.js\";\nimport settings from \"./settings.js\";\nimport sort from \"./sort.js\";\nimport sortDown from \"./sortDown.js\";\nimport sortUp from \"./sortUp.js\";\nimport trash from \"./trash.js\";\nimport upload from \"./upload.js\";\nimport download from \"./download.js\";\nimport cashCheck from \"./cashCheck.js\";\nimport move from \"./move.js\";\nimport tree from \"./tree.js\";\nimport list4 from \"./list4.js\";\nimport ok from \"./ok.js\";\nimport monitor from \"./monitor.js\";\nimport toggleOff from \"./toggleOff.js\";\nimport toggleOn from \"./toggleOn.js\";\nimport mail from \"./mail.js\";\nimport mailFull from \"./mailFull.js\";\nimport mailOk from \"./mailOk.js\";\nimport fullscreen from \"./fullScreen.js\";\nimport smallscreen from \"./smallScreen.js\";\nimport cart from \"./cart.js\";\nimport notifyNot from \"./notifyNot.js\";\nimport notify from \"./notify.js\";\nimport monitorNot from \"./monitorNot.js\";\nimport start from \"./start.js\";\nimport image from \"./image.js\";\nimport hub from \"./hub.js\";\nimport profile from \"./profile.js\";\nimport time from \"./time.js\";\nimport pin from \"./pin.js\";\nimport mark from \"./mark.js\";\nimport copyLink from \"./copyLink.js\";\nimport document from \"./document.js\";\nimport tire from \"./tire.js\";\nimport tShirt from \"./tShirt.js\";\nimport cigarette from \"./cigarette.js\";\nimport shoes from \"./shoes.js\";\nimport bike from \"./bike.js\";\nimport pulse from \"./pulse.js\";\nimport exit from \"./exit.js\";\nimport zoomIn from \"./zoomIn.js\";\nimport zoomOut from \"./zoomOut.js\";\nimport search from \"./search.js\";\nimport flash from \"./flash.js\";\nimport questionInvert from \"./questionInvert\";\nimport info from \"./info\";\n\nconst icons = {\n  \"arrow-down\": arrowDown,\n  \"arrow-left\": arrowLeft,\n  \"arrow-right\": arrowRight,\n  \"arrow-up\": arrowUp,\n  \"arrows-updown\": arrowsUpdown,\n  attention,\n  burger,\n  calendar,\n  cashbox,\n  cashbox2,\n  catalog,\n  check,\n  \"chevron-down\": chevronDown,\n  \"chevron-left\": chevronLeft,\n  \"chevron-right\": chevronRight,\n  \"chevron-up\": chevronUp,\n  clear,\n  close,\n  column,\n  copy,\n  cycle,\n  visible,\n  edit,\n  favorite,\n  \"favorite-fill\": favoriteFill,\n  file,\n  filter,\n  history,\n  \"input-calendar\": inputCalendar,\n  invisible,\n  key,\n  list3,\n  loader,\n  market,\n  message,\n  minus,\n  \"more-horizontal\": moreHorizontal,\n  \"more-vertical\": moreVertical,\n  phone,\n  plus,\n  print,\n  question,\n  rouble,\n  save,\n  set,\n  settings,\n  sort,\n  \"sort-down\": sortDown,\n  \"sort-up\": sortUp,\n  trash,\n  upload,\n  download,\n  \"cash-check\": cashCheck,\n  move,\n  tree,\n  list4,\n  ok,\n  monitor,\n  \"toggle-off\": toggleOff,\n  \"toggle-on\": toggleOn,\n  mail,\n  \"mail-full\": mailFull,\n  \"mail-ok\": mailOk,\n  fullscreen,\n  smallscreen,\n  cart,\n  \"notify-not\": notifyNot,\n  notify,\n  \"monitor-not\": monitorNot,\n  start,\n  image,\n  hub,\n  profile,\n  time,\n  pin,\n  mark,\n  \"copy-link\": copyLink,\n  document,\n  tire,\n  cigarette,\n  \"t-shirt\": tShirt,\n  shoes,\n  bike,\n  pulse,\n  exit,\n  \"zoom-in\": zoomIn,\n  \"zoom-out\": zoomOut,\n  search,\n  flash,\n  \"question-invert\": questionInvert,\n  info,\n};\n\nexport default icons;\n","export default \"M9 12.268l2.293-2.235a1.02 1.02 0 011.414 0c.39.38.39.998 0 1.379L8 16l-4.707-4.588a.957.957 0 010-1.379 1.02 1.02 0 011.414 0L7 12.268V.975A.988.988 0 018 0c.552 0 1 .436 1 .975v11.293z\";","export default \"M5.977 9H13a1 1 0 100-2H5.977l2.726-2.448a.845.845 0 000-1.286 1.095 1.095 0 00-1.431 0L2 8l5.272 4.734a1.095 1.095 0 001.431 0 .845.845 0 000-1.286L5.977 9z\";","export default \"M10.023 9H3a1 1 0 110-2h7.023L7.297 4.552a.845.845 0 010-1.286 1.095 1.095 0 011.431 0L14 8l-5.272 4.734a1.095 1.095 0 01-1.431 0 .845.845 0 010-1.286L10.023 9z\";","export default \"M9 3.732l2.293 2.235c.39.38 1.024.38 1.414 0a.957.957 0 000-1.379L8 0 3.293 4.588a.957.957 0 000 1.379c.39.38 1.024.38 1.414 0L7 3.732v11.293c0 .539.448.975 1 .975s1-.436 1-.975V3.732z\";","export default \"M8 2.646l-3.293 3.08a1.05 1.05 0 01-1.414 0 .893.893 0 010-1.323L8 0l4.707 4.403c.39.365.39.958 0 1.323a1.05 1.05 0 01-1.414 0L8 2.646zm0 10.708l3.293-3.08a1.05 1.05 0 011.414 0c.39.365.39.958 0 1.323L8 16l-4.707-4.403a.893.893 0 010-1.323 1.05 1.05 0 011.414 0L8 13.354z\";","export default \"M6 9V2a2 2 0 114 0v7a2 2 0 11-4 0zm2 7a2 2 0 110-4 2 2 0 010 4z\";","export default \"M1 5a1 1 0 110-2h13.986a1 1 0 010 2H1zm0 4a1 1 0 110-2h13.986a1 1 0 010 2H1zm0 4a1 1 0 010-2h13.986a1 1 0 010 2H1z\";","export default \"M4 2V0h2v2h4V0h2v2h1c1.657 0 3 1.373 3 3.067v7.866C16 14.627 14.657 16 13 16H3c-1.657 0-3-1.373-3-3.067V5.067C0 3.373 1.343 2 3 2h1zm0 0zm2 0zm4 0zm2 0zM3 4c-.552 0-1 .462-1 1.032v7.936C2 13.538 2.448 14 3 14h10c.552 0 1-.462 1-1.032V5.032C14 4.462 13.552 4 13 4H3zm1 9v-2h2v2H4zm3 0v-2h2v2H7zm3 0v-2h2v2h-2zm-6-3V8h2v2H4zm3 0V8h2v2H7zm0-3V5h2v2H7zm3 3V8h2v2h-2zm0-3V5h2v2h-2z\";","export default \"M9 8V6H7a1 1 0 01-1-1V1a1 1 0 011-1h8a1 1 0 011 1v4a1 1 0 01-1 1h-2v2h2a1 1 0 011 1v6a1 1 0 01-1 1H1a1 1 0 01-1-1V9a1 1 0 011-1h8zm0-4h5V2H8v2h1zm-7 6v4h12v-4H2z\";","export default \"M4 5V1.5A1.5 1.5 0 015.5 0h3.293a1.5 1.5 0 011.06.44l1.708 1.706A1.5 1.5 0 0112 3.207V5a2 2 0 012 2v7a2 2 0 01-2 2H4a2 2 0 01-2-2V7a2 2 0 012-2zm2 0h4V3.414L8.586 2H6v3zm-.5 3h5a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-5a.5.5 0 01-.5-.5v-1a.5.5 0 01.5-.5zM4 7v7h8V7H4z\";","export default \"M9 4.711v6.727a10.236 10.236 0 015-.234V4.337A6.481 6.481 0 0011.969 4c-.97 0-1.955.232-2.969.711zm-2 .06C5.994 4.25 5.022 4 4.061 4c-.65 0-1.337.115-2.061.351v6.85a10.063 10.063 0 015 .26V4.77zM7.93 3h.015c1.341-.667 2.683-1 4.024-1 1.344 0 2.687.335 4.031 1.004v11C14.656 13.334 13.312 13 11.969 13c-1.344 0-2.688.335-4.031 1.004C6.643 13.334 5.332 13 4 13c-1.332 0-2.665.335-4 1.004v-11C1.411 2.334 2.765 2 4.061 2c1.294 0 2.584.333 3.87 1z\";","export default \"M14.138 2.322a1.085 1.085 0 011.542 0c.427.43.427 1.126 0 1.555L6 13.602.32 7.877a1.106 1.106 0 010-1.555 1.085 1.085 0 011.542 0L6 10.492l8.138-8.17z\";","export default \"M8 10.657l6.364-6.364a1 1 0 011.414 1.414l-7.07 7.071a1 1 0 01-1.415 0L.222 5.708a1 1 0 011.414-1.415L8 10.657z\";","export default \"M5.225 8.016l6.364-6.364A1 1 0 1010.174.237l-7.07 7.071a1 1 0 000 1.415l7.07 7.07a1 1 0 001.415-1.413L5.225 8.016z\";","export default \"M10.538 8.016L4.174 1.652A1 1 0 115.59.237l7.07 7.071a1 1 0 010 1.415l-7.07 7.07a1 1 0 01-1.415-1.413l6.364-6.364z\";","export default \"M8 5.343l6.364 6.364a1 1 0 001.414-1.414l-7.07-7.071a1 1 0 00-1.415 0l-7.071 7.07a1 1 0 001.414 1.415L8 5.343z\";","export default \"M10.347 12.186l3.863.028c.511.009.933.43.942.942a.888.888 0 01-.91.91H7.754a.767.767 0 01-.252-.048l-5.837-.04C.193 12.507.152 10.162 1.573 8.74L7.74 2.573c1.422-1.42 3.767-1.38 5.238.092l.78.78c1.472 1.472 1.513 3.817.092 5.238l-3.503 3.503zm-.056-2.609L6.866 6.113l-3.96 3.96c-.55.549-.662 1.374-.345 2.06l5.14.035 2.59-2.59zm1.287-1.287l.94-.94c.71-.71.69-1.882-.046-2.618l-.78-.78c-.736-.736-1.909-.757-2.62-.046l-.92.92 3.426 3.464z\";","export default \"M8.047 9.555L8 9.602l-.047-.047-4.09 4.123c-.427.43-1.117.43-1.543 0a1.106 1.106 0 010-1.555L6.41 8 2.32 3.877a1.106 1.106 0 010-1.555 1.085 1.085 0 011.542 0l4.091 4.123L8 6.398l.047.047 4.09-4.123a1.085 1.085 0 011.543 0c.427.43.427 1.126 0 1.555L9.59 8l4.09 4.123c.427.43.427 1.126 0 1.555-.426.43-1.116.43-1.542 0L8.047 9.555z\";","export default \"M9 1a1 1 0 112 0v14a1 1 0 11-2 0V1zm4 0a1 1 0 112 0v14a1 1 0 11-2 0V1zM5 1a1 1 0 112 0v14a1 1 0 11-2 0V1zM1 1a1 1 0 112 0v14a1 1 0 11-2 0V1z\";","export default \"M10 12H4V6H2v8h8v-2zm0 0V6H4v6h6zM4 4V1a1 1 0 011-1h10a1 1 0 011 1v10a1 1 0 01-1 1h-3v3a1 1 0 01-1 1H1a1 1 0 01-1-1V5a1 1 0 011-1h3zm2 0h5a1 1 0 011 1v5h2V2H6v2z\";","export default \"M4.912 11.5a4.667 4.667 0 007.36-1.62 1.167 1.167 0 012.136.941A7 7 0 013.333 13.22v.614a1.167 1.167 0 11-2.333 0V9.167h4.667a1.167 1.167 0 110 2.333h-.755zm6.176-7a4.668 4.668 0 00-7.37 1.641 1.167 1.167 0 01-2.14-.93 7 7 0 0111.089-2.43v-.614a1.167 1.167 0 112.333 0v4.666h-4.667a1.167 1.167 0 010-2.333h.755z\";","export default \"M8 5c-1.9 0-3.707.955-5.464 3C4.293 10.045 6.101 11 8 11c1.9 0 3.707-.955 5.464-3C11.707 5.955 9.899 5 8 5zm0 8c-2.946 0-5.612-1.667-8-5 2.388-3.333 5.054-5 8-5 2.946 0 5.612 1.667 8 5-2.388 3.333-5.054 5-8 5zm0-3a2 2 0 110-4 2 2 0 010 4z\";","export default \"M4.204 10.126l1.724 1.748 5.994-6.034-1.73-1.743-5.988 6.029zm-.892 1.23l-.737 2.155 2.242-.63-1.505-1.525zm7.793-8.177l1.729 1.743.747-.752-1.73-1.741-.746.75zM6.207 14.442a1.004 1.004 0 01-.441.259l-4.489 1.26A1.004 1.004 0 01.056 14.67L1.66 9.98c.05-.144.13-.274.238-.382l9.24-9.302a1.004 1.004 0 011.425 0l3.145 3.166a1.004 1.004 0 010 1.415l-9.501 9.565z\";","export default \"M10.776 11.127a3.075 3.075 0 01.813-2.614l1.434-1.48-1.992-.315c-.918-.145-1.712-.748-2.128-1.616L8 3.22l-.903 1.882a2.873 2.873 0 01-2.128 1.616l-1.992.316 1.434 1.479c.661.682.964 1.657.813 2.614l-.328 2.077 1.789-.968a2.752 2.752 0 012.63 0l1.79.968-.329-2.077zm-3.215 2.88l-3.477 1.881a.934.934 0 01-1.286-.427 1.036 1.036 0 01-.094-.62l.638-4.038c.05-.32-.05-.644-.271-.872L.284 7.056a1.029 1.029 0 01-.009-1.41.94.94 0 01.536-.285l3.872-.614a.958.958 0 00.71-.538L7.146.55a.936.936 0 011.28-.444.976.976 0 01.425.444l1.756 3.659c.139.29.403.49.71.538l3.871.614c.521.083.88.591.8 1.135-.03.213-.127.41-.273.56L12.93 9.931a1.03 1.03 0 00-.271.872l.638 4.038c.085.543-.266 1.056-.786 1.145a.918.918 0 01-.594-.098l-3.478-1.882a.917.917 0 00-.877 0z\";","export default \"M7.561 14.006l-3.477 1.882a.934.934 0 01-1.286-.427 1.036 1.036 0 01-.094-.62l.638-4.038c.05-.32-.05-.644-.271-.872L.284 7.056a1.029 1.029 0 01-.009-1.41.94.94 0 01.536-.285l3.872-.614a.958.958 0 00.71-.538L7.146.55a.936.936 0 011.28-.444.976.976 0 01.425.444l1.756 3.659c.139.29.403.49.71.538l3.871.614c.521.083.88.591.8 1.135-.03.213-.127.41-.273.56L12.93 9.931a1.03 1.03 0 00-.271.872l.638 4.038c.085.543-.266 1.056-.786 1.145a.918.918 0 01-.594-.098l-3.478-1.882a.917.917 0 00-.877 0z\";","export default \"M4 0h5.158a2 2 0 011.422.593l2.842 2.872A2 2 0 0114 4.87V14a2 2 0 01-2 2H4a2 2 0 01-2-2V2a2 2 0 012-2zm0 2v12h8V4.871L9.158 2H4z\";","export default \"M3.437 2l3.33 3.287A1 1 0 017.064 6v7.363l1.919-.986V6a1 1 0 01.294-.709L12.58 2H3.437zm1.627 4.417L.297 1.712C-.339 1.084.106 0 1 0h14c.892 0 1.338 1.079.706 1.708l-4.723 4.706v6.573a1 1 0 01-.543.89L6.52 15.89A1 1 0 015.064 15V6.417z\";","export default \"M6.027 12H4.923C4.413 12 4 11.552 4 11s.413-1 .923-1h1.333c.126-.356.295-.691.502-1H4.923C4.413 9 4 8.552 4 8s.413-1 .923-1h5.154a.86.86 0 01.128.01A4.568 4.568 0 0112 7.256V5.392L8.583 2H4a1 1 0 00-1 1v10a1 1 0 001 1h2.758a4.474 4.474 0 01-.73-2zm6.945 3.26A2.985 2.985 0 0111 16H4a3 3 0 01-3-3V3a3 3 0 013-3h4.995l.704.29 4.005 3.976.296.71V8.67c.625.773 1 1.757 1 2.829a4.496 4.496 0 01-4.5 4.5l2.472-.74zM10.5 14a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM4.923 6C4.413 6 4 5.552 4 5s.413-1 .923-1h3.154C8.587 4 9 4.448 9 5s-.413 1-.923 1H4.923zm6.577 5a.5.5 0 110 1H10v-1.5a.5.5 0 111 0v.5h.5z\";","export default \"M4 2V0h2v2h4V0h2v2h1c1.657 0 3 1.373 3 3.067v7.866C16 14.627 14.657 16 13 16H3c-1.657 0-3-1.373-3-3.067V5.067C0 3.373 1.343 2 3 2h1zm0 0zm2 0zm4 0zm2 0zM3 4c-.552 0-1 .462-1 1.032v7.936C2 13.538 2.448 14 3 14h10c.552 0 1-.462 1-1.032V5.032C14 4.462 13.552 4 13 4H3zm1 9v-2h2v2H4zm3 0v-2h2v2H7zm3 0v-2h2v2h-2zm-6-3V8h2v2H4zm3 0V8h2v2H7zm0-3V5h2v2H7zm3 3V8h2v2h-2zm0-3V5h2v2h-2z\";","export default \"M3.85 9.32l-1.416 1.417C1.593 10.003.782 9.091 0 8c2.388-3.333 5.054-5 8-5a7.54 7.54 0 011.924.247L8.17 5.003A5.634 5.634 0 008 5c-1.9 0-3.707.955-5.464 3 .435.506.873.946 1.315 1.32zm3.981 1.677C7.887 11 7.944 11 8 11c1.9 0 3.707-.955 5.464-3a11.837 11.837 0 00-1.315-1.32l1.417-1.417C14.407 5.997 15.218 6.909 16 8c-2.388 3.333-5.054 5-8 5a7.54 7.54 0 01-1.924-.247l1.755-1.756zm5.826-8.654a1 1 0 010 1.414l-9.9 9.9a1 1 0 01-1.414-1.414l9.9-9.9a1 1 0 011.414 0z\";","export default \"M6.166 6.283a5 5 0 113.579 3.558l-1.304.874-.795 2.905-2.576.31L4 16H0v-3.605l6.166-6.112zM11 8a3 3 0 100-6 3 3 0 000 6zm1-3a1 1 0 110-2 1 1 0 010 2zM2 13.229V14h.782l.997-1.929 2.293-.276.637-2.327 1-.67-.662-.572L2 13.23z\";","export default \"M1 5a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2zm4-8a1 1 0 110-2h9.986a1 1 0 010 2H5zm0 4a1 1 0 110-2h9.986a1 1 0 010 2H5zm0 4a1 1 0 010-2h9.986a1 1 0 010 2H5z\";","export default \"M8 0a1 1 0 110 2 6 6 0 106 6 1 1 0 012 0 8 8 0 11-8-8z\";","export default \"M1.25 8.033A1.75 1.75 0 01-.046 5.768l1.334-4.005A.75.75 0 012 1.25h12a.75.75 0 01.712.513l1.334 4.005a1.75 1.75 0 01-1.296 2.265V10H15a1 1 0 011 1v4a1 1 0 01-1 1H1a1 1 0 01-1-1v-4a1 1 0 011-1h.25V8.033zm1.5-.17V10h10.5V7.863A7.4 7.4 0 0012 7.756c-.7 0-1.01.093-1.666.418-.845.42-1.367.576-2.334.576-.967 0-1.49-.156-2.334-.576C5.011 7.85 4.7 7.756 4 7.756a7.4 7.4 0 00-1.25.107zM1.5 11.5v3h13v-3h-13zm1.04-8.75L1.378 6.242a.25.25 0 00.3.32A9.043 9.043 0 014 6.257c.967 0 1.49.155 2.334.575.655.326.967.419 1.666.419.7 0 1.01-.093 1.666-.419.845-.42 1.367-.575 2.334-.575.775 0 1.55.102 2.322.307a.25.25 0 00.301-.321L13.46 2.75H2.541z\";","export default \"M3 2c-.552 0-1 .462-1 1.032v6.936C2 10.538 2.448 11 3 11h5l2.786 1.683L11.39 11H13c.552 0 1-.462 1-1.032V3.032C14 2.462 13.552 2 13 2H3zm0-2h10c1.657 0 3 1.373 3 3.067v6.866C16 11.627 14.657 13 13 13l-1.048 3-4.866-3H3c-1.657 0-3-1.373-3-3.067V3.067C0 1.373 1.343 0 3 0zm2 4h6a1 1 0 010 2H5a1 1 0 110-2zm0 3h6a1 1 0 010 2H5a1 1 0 110-2z\";","export default \"M1 7h14c.554 0 1 .446 1 1s-.446 1-1 1H1c-.554 0-1-.446-1-1s.446-1 1-1z\";","export default \"M14 10a2 2 0 110-4 2 2 0 010 4zm-6 0a2 2 0 110-4 2 2 0 010 4zm-6 0a2 2 0 110-4 2 2 0 010 4z\";","export default \"M8 16a2 2 0 110-4 2 2 0 010 4zm0-6a2 2 0 110-4 2 2 0 010 4zm0-6a2 2 0 110-4 2 2 0 010 4z\";","export default \"M3.55.124c.243.092.475.227.727.405.064.046.127.093.197.146l.128.1c.366.258.665.52 1.154.988l.265.252c.388.388.553.571.746.872.616.973.46 1.622-.27 2.731a6.218 6.218 0 01-.432.544l-.05.058-.151.172a17.881 17.881 0 00.56.867c.31.437.677.858 1.083 1.245.381.363.834.714 1.374 1.067a16.235 16.235 0 00.885.555l.235-.234c.031-.031.068-.07.116-.125l.15-.171c.487-.55.866-.824 1.475-.847.439-.014.855.168 1.34.498.154.103.31.22.484.358.097.077.593.487.692.56 1.166.892 1.668 1.456 1.74 2.474.028.69-.319 1.29-.88 1.886-2.462 2.69-5.943 1.46-10.044-1.748C1.591 10.052-.41 7.003.071 3.701.303 2.164 1.21.577 2.408.116c.247-.123.52-.139.78-.09.122.02.242.053.361.098zM1.601 3.926c-.38 2.605 1.338 5.222 4.429 7.64 3.478 2.72 6.299 3.718 7.95 1.913.307-.326.477-.62.472-.754-.027-.38-.332-.722-1.128-1.33-.128-.095-.657-.531-.725-.585a6.527 6.527 0 00-.39-.29c-.232-.158-.4-.232-.414-.231-.043.002-.146.076-.367.326-.073.083-.122.14-.153.173a4.344 4.344 0 01-.18.192l-.599.599a.778.778 0 01-.615.233.98.98 0 01-.246-.043 1.948 1.948 0 01-.286-.117 7.39 7.39 0 01-.544-.301 16.939 16.939 0 01-.8-.51 10.927 10.927 0 01-1.57-1.224c-.477-.454-.909-.95-1.274-1.466a19.05 19.05 0 01-.515-.785 7.814 7.814 0 01-.3-.516 2.04 2.04 0 01-.117-.264.976.976 0 01-.051-.22c-.022-.198.008-.396.204-.638.114-.124.288-.316.46-.515l.046-.054a5.3 5.3 0 00.316-.39c.428-.65.451-.747.255-1.056-.11-.173-.224-.299-.522-.596l-.253-.243c-.438-.417-.693-.64-1.004-.861l-.15-.115a5.675 5.675 0 00-.155-.115A1.807 1.807 0 003 1.564a.502.502 0 00-.035-.011c-.616.299-1.211 1.367-1.364 2.373z\";","export default \"M7.036 7V1.036a1 1 0 112 0V7H15a1 1 0 010 2H9.036v5.964a1 1 0 01-2 0V9H1.07a1 1 0 010-2h5.965z\";","export default \"M2 12H1a1 1 0 01-1-1V5a1 1 0 011-1h1V2a2 2 0 012-2h8a2 2 0 012 2v2h1a1 1 0 011 1v6a1 1 0 01-1 1h-1v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2zm2-1v3h8V7H4v4zm0-7h8V2H4v2zm2 6a1 1 0 110-2h4a1 1 0 010 2H6zm0 3a1 1 0 010-2h4a1 1 0 010 2H6z\";","export default \"M8.5 16a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm0-16C10.981 0 13 2.05 13 4.571c0 2.127-1.436 3.918-3.375 4.427v1.86c0 .63-.504 1.142-1.125 1.142a1.134 1.134 0 01-1.125-1.143V8c0-.631.504-1.143 1.125-1.143 1.24 0 2.25-1.025 2.25-2.286 0-1.26-1.01-2.285-2.25-2.285S6.25 3.31 6.25 4.57c0 .632-.504 1.143-1.125 1.143A1.134 1.134 0 014 4.571C4 2.051 6.019 0 8.5 0z\";","export default \"M4 11V9h-.995A1.002 1.002 0 012 8c0-.552.45-1 1.005-1H4V1a1 1 0 011-1h4.5a4.5 4.5 0 110 9H6v2h4.995c.555 0 1.005.448 1.005 1s-.45 1-1.005 1H6v2a1 1 0 01-2 0v-2h-.995A1.002 1.002 0 012 12c0-.552.45-1 1.005-1H4zm2-9v5h3.5a2.5 2.5 0 100-5H6z\";","export default \"M11 2.414V4a2 2 0 01-2 2H6a2 2 0 01-2-2V2H3a1 1 0 00-1 1v10a1 1 0 001 1h10a1 1 0 001-1V5.828a1 1 0 00-.293-.707L11 2.414zM3 0h7.172a3 3 0 012.12.879l2.83 2.828A3 3 0 0116 5.828V13a3 3 0 01-3 3H3a3 3 0 01-3-3V3a3 3 0 013-3zm3 2v2h3V2H6zM5 9v2h6V9H5zm0-2h6a2 2 0 012 2v2a2 2 0 01-2 2H5a2 2 0 01-2-2V9a2 2 0 012-2z\";","export default \"M13.962 10.33a3.494 3.494 0 010-4.516l-.128-.31A3.492 3.492 0 0110.64 2.31l-.31-.128a3.492 3.492 0 01-4.516 0l-.31.128A3.492 3.492 0 012.31 5.504l-.128.31a3.492 3.492 0 010 4.517l.128.31a3.492 3.492 0 013.194 3.193l.31.128a3.494 3.494 0 014.516 0l.31-.128a3.492 3.492 0 011.01-2.184 3.494 3.494 0 012.184-1.01l.128-.31zm-3.329 3.964l.013.257.109-.006.079-.07-.172-.191a3.479 3.479 0 00-.03-.034l.001.044zm-5.15-.01l-.172.19.079.071.108.006.013-.257.002-.044-.03.034zm-3.633-3.65l-.257.012.006.109.071.079.19-.173.034-.03-.044.002zm.01-5.151l-.19-.172-.071.078-.006.109.257.013.044.002-.033-.03zM5.512 1.85l-.013-.257-.109.006-.079.071.173.19.03.034-.002-.044zm5.15.01l.173-.19-.08-.071-.108-.006-.013.257-.002.044.03-.033zm3.633 3.651l.257-.013-.006-.109-.071-.078-.19.171-.034.031.044-.002zm-.01 5.15l.19.173.071-.08.006-.108-.257-.013-.044-.002.034.03zm.165 1.983l-.257-.013a1.493 1.493 0 00-1.128.433 1.492 1.492 0 00-.434 1.128l.014.257a1 1 0 01-.616.975l-1.553.644a1 1 0 01-1.126-.254l-.172-.19a1.493 1.493 0 00-1.105-.491c-.42 0-.824.18-1.105.491l-.172.19a1 1 0 01-1.125.254l-1.554-.644a1 1 0 01-.615-.975l.013-.257a1.491 1.491 0 00-1.562-1.562l-.257.014a1 1 0 01-.974-.616l-.645-1.553A1 1 0 01.33 9.349l.19-.172a1.492 1.492 0 000-2.21l-.19-.172A1 1 0 01.076 5.67l.645-1.554a1 1 0 01.974-.615l.257.013a1.492 1.492 0 001.561-1.561l-.012-.257A1 1 0 014.116.72L5.67.076A1 1 0 016.795.33l.172.19a1.492 1.492 0 002.21 0l.172-.19a1 1 0 011.125-.254l1.554.645a1 1 0 01.616.974l-.014.257a1.491 1.491 0 001.561 1.561l.258-.012a1 1 0 01.974.615l.645 1.554a1 1 0 01-.254 1.125l-.19.172a1.493 1.493 0 00-.491 1.105c0 .42.179.824.49 1.105l.191.172a1 1 0 01.254 1.125l-.644 1.554a1 1 0 01-.975.616zM8 10a2 2 0 100-4 2 2 0 000 4zm0 2a4 4 0 110-8 4 4 0 010 8z\";","export default \"M9 10.732V15a1 1 0 01-2 0v-4.268a2 2 0 112 0zm3.031-7.482A1.002 1.002 0 0112 3V1a1 1 0 012 0v2c0 .086-.01.17-.031.25a2 2 0 11-1.938 0zm-10 0A1.002 1.002 0 012 3V1a1 1 0 112 0v2c0 .086-.01.17-.031.25a2 2 0 11-1.938 0zM2 10a1 1 0 112 0v5a1 1 0 01-2 0v-5zm10 0a1 1 0 012 0v5a1 1 0 01-2 0v-5zM7 1a1 1 0 112 0v3a1 1 0 11-2 0V1z\";","export default \"M7 1v14a1 1 0 01-2 0V3.414L2.707 5.707a1 1 0 01-1.414-1.414l4-4A1 1 0 017 1zm2 14V1a1 1 0 112 0v11.586l2.293-2.293a1 1 0 011.414 1.414l-4 4A1 1 0 019 15z\";","export default [\"M9 15V1a1 1 0 112 0v11.586l2.293-2.293a1 1 0 011.414 1.414l-4 4A1 1 0 019 15z\",{path:\"M7 1v14a1 1 0 01-2 0V3.414L2.707 5.707a1 1 0 01-1.414-1.414l4-4A1 1 0 017 1z\",color:\"var(--palette-noactive-3)\"}];","export default [\"M7 1v14a1 1 0 11-2 0V3.414L2.707 5.707a1 1 0 01-1.414-1.414l4-4A1 1 0 017 1z\",{path:\"M9 15V1a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 1.414l-4 4A1 1 0 019 15z\",color:\"var(--palette-noactive-3)\"}];","export default \"M2 5h12V4h-3a1 1 0 01-1-1V2H6v1a1 1 0 01-1 1H2v1zm12 2v7a2 2 0 01-2 2H4a2 2 0 01-2-2V7H1a1 1 0 01-1-1V3a1 1 0 011-1h3V1a1 1 0 011-1h6a1 1 0 011 1v1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1zm-2 0H4v7h8V7zM5 9a1 1 0 112 0v3a1 1 0 01-2 0V9zm4 0a1 1 0 112 0v3a1 1 0 01-2 0V9z\";","export default \"M14 14v-4a1 1 0 012 0v6H0v-6a1 1 0 112 0v4h12zM7 3.828L4.207 6.621a1 1 0 11-1.414-1.414L8 0l5.207 5.207a1 1 0 11-1.414 1.414L9 3.828V11a1 1 0 01-2 0V3.828z\";","export default \"M14 14v-4a1 1 0 012 0v6H0v-6a1 1 0 112 0v4h12zM7 8.172V1a1 1 0 112 0v7.172l2.793-2.793a1 1 0 011.414 1.414L8 12 2.793 6.793a1 1 0 011.414-1.414L7 8.172z\";","export default \"M11.002 15.132l-1.587.785a1 1 0 01-.897-.005l-1.52-.774-1.519.774a1 1 0 01-.897.005l-2.026-1.005A1 1 0 012 14.016V1a1 1 0 011-1h10.033a1 1 0 011 1v14.02a1 1 0 01-1.444.897l-1.587-.785zM4 13.396l1.02.506 1.525-.777a1 1 0 01.907 0l1.526.777 1.581-.782a1 1 0 01.887 0l.587.29V2H4v11.396zM6 3h4a1 1 0 010 2H6a1 1 0 110-2zm0 3h4a1 1 0 010 2H6a1 1 0 110-2zm0 3h4a1 1 0 010 2H6a1 1 0 010-2z\";","export default \"M5.65 7.063L3.292 4.707a1 1 0 011.414-1.414l2.356 2.356A1 1 0 019 6v2a.999.999 0 01-1 1H6a1 1 0 01-.35-1.937zM3 0h6a3 3 0 013 3v6a3 3 0 01-3 3H3a3 3 0 01-3-3V3a3 3 0 013-3zm0 2a1 1 0 00-1 1v6a1 1 0 001 1h6a1 1 0 001-1V3a1 1 0 00-1-1H3zm10 2a3 3 0 013 3v6a3 3 0 01-3 3H7a3 3 0 01-3-3h2a1 1 0 001 1h6a1 1 0 001-1V7a1 1 0 00-1-1V4z\";","export default \"M7 9h4a1 1 0 010 2H6a1 1 0 01-1-1V6H2v7h13a1 1 0 010 2H1a.997.997 0 01-1-1V1a1 1 0 112 0v3h13a1 1 0 010 2H7v3zm8 0a1 1 0 110 2 1 1 0 010-2z\";","export default \"M14.986 3a1 1 0 100-2 1 1 0 000 2zm0 4a1 1 0 100-2 1 1 0 000 2zm0 4a1 1 0 100-2 1 1 0 000 2zm0 4a1 1 0 100-2 1 1 0 000 2zm-4-12a1 1 0 100-2H1a1 1 0 000 2h9.986zm0 4a1 1 0 100-2H1a1 1 0 000 2h9.986zm0 4a1 1 0 000-2H1a1 1 0 000 2h9.986zm0 4a1 1 0 000-2H1a1 1 0 000 2h9.986z\";","export default \"M13.462 6.304a7 7 0 11-2.621-3.157L9.62 4.74a5 5 0 102.328 3.541l1.513-1.978zm-6.755-.011L8.4 7.985 14.206.393a1 1 0 111.588 1.214l-6.5 8.5a1 1 0 01-1.501.1l-2.5-2.5a1 1 0 011.414-1.414z\";","export default \"M9 12v2h3a1 1 0 010 2H4a1 1 0 010-2h3v-2H2a2 2 0 01-2-2V2a2 2 0 012-2h12a2 2 0 012 2v8a2 2 0 01-2 2H9zM2 2v8h12V2H2z\";","export default \"M6 2h4a6 6 0 110 12H6A6 6 0 116 2zm4 9a3 3 0 100-6 3 3 0 000 6z\";","export default \"M6 2h4a6 6 0 110 12H6A6 6 0 116 2zm0 2a4 4 0 100 8h4a4 4 0 100-8H6zm0 7a3 3 0 110-6 3 3 0 010 6z\";","export default \"M15.994 3.846a.94.94 0 01.006.187V12a2 2 0 01-2 2H2a2 2 0 01-2-2V4a2 2 0 012-2h12a2 2 0 011.994 1.846zM2.77 4l5.238 3.618L13.236 4H2.77zM14 5.854L8.009 10 2 5.849V12h12V5.854z\";","export default \"M15.535 2.718l-7.56 5.068-7.54-5.03C.8 2.296 1.364 2 2 2h12c.617 0 1.168.28 1.535.718zM16 4.814V12a2 2 0 01-2 2H2a2 2 0 01-2-2V4.87l7.978 5.322L16 4.814z\";","export default \"M16 6.033v7.149C16 14.73 14.778 16 13.25 16H2.75C1.222 16 0 14.73 0 13.182V6a.944.944 0 01.186-.593.996.996 0 01.521-.364L8.007 0l7.286 5.043a.99.99 0 01.52.363.944.944 0 01.187.627zM2 7.85v5.332c0 .46.345.818.75.818h10.5c.405 0 .75-.358.75-.818v-5.33L8.007 12 2 7.85zM2.768 6l5.238 3.618L13.234 6 8.006 2.382 2.768 6z\";","export default \"M2 0h12a2 2 0 012 2v12a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm0 2v12h12V2H2zm3 3v2a1 1 0 11-2 0V4a1 1 0 011-1h3a1 1 0 110 2H5zm6 6V9a1 1 0 012 0v3a1 1 0 01-1 1H9a1 1 0 010-2h2z\";","export default \"M2 0h12a2 2 0 012 2v12a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm0 2v12h12V2H2zm4 4V4a1 1 0 112 0v3a1 1 0 01-1 1H4a1 1 0 110-2h2zm4 4v2a1 1 0 01-2 0V9a1 1 0 011-1h3a1 1 0 010 2h-2z\";","export default \"M5.542 3h9.353C15.505 3 16 3.448 16 4c0 .045-.003.09-.01.133.024.174.005.357-.064.532l-1.773 5.01A2.073 2.073 0 0112.23 11H7.45a2.076 2.076 0 01-1.969-1.447L3.395 3.105H1.036A1.045 1.045 0 010 2.053C0 1.47.464 1 1.036 1h2.359c.895 0 1.689.584 1.968 1.447l.18.553zm.648 2l1.26 3.895h4.778L13.607 5H6.19zm.31 10a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm6 0a1.5 1.5 0 110-3 1.5 1.5 0 010 3z\";","export default \"M11.584 12.998A1.524 1.524 0 0111.5 13h-10a1.5 1.5 0 010-3H3V5c0-.188.01-.373.03-.555L.293 1.707A1 1 0 111.707.293l14 14a1 1 0 01-1.414 1.414l-2.71-2.71zM4.678 1.263A5 5 0 0113 5v4.586L4.678 1.263zM10 14a2 2 0 11-4 0h4z\";","export default \"M13 10h1.5a1.5 1.5 0 010 3h-13a1.5 1.5 0 010-3H3V5a5 5 0 1110 0v5zm-3 4a2 2 0 11-4 0h4z\";","export default \"M2 3.414V10h6.586L2 3.414zM10.586 12H9v2h2a1 1 0 010 2H4a1 1 0 010-2h3v-2H2a2 2 0 01-2-2V2a2 2 0 01.088-.589A1 1 0 011.708.293l14 14a1 1 0 01-1.415 1.414L10.586 12zM3.414 0H14a2 2 0 012 2v8c0 .702-.362 1.32-.91 1.677L13.415 10H14V2H5.414l-2-2z\";","export default \"M8 16A8 8 0 118 0a8 8 0 010 16zm0-2A6 6 0 108 2a6 6 0 000 12zm-.972-9.297l4.156 2.434a1 1 0 010 1.726l-4.156 2.434a1 1 0 01-1.506-.862v-4.87a1 1 0 011.506-.862z\";","export default \"M14 4.692V2H2v10.577l4.437-4.426 2.395 1.979 5.12-5.483.048.045zm0 2.834L9.009 12.87l-2.446-2.02L3.406 14H14V7.526zM2 0h12a2 2 0 012 2v12a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm3 7a2 2 0 110-4 2 2 0 010 4z\";","export default \"M5 13.688l9-2.25V4.562l-9 2.25v6.876zm-2-.424V6.736l-1-.503v6.53l1 .5zM4 5l12-3v11L4 16l-4-2V2.99L4 5zm8-5l2 .938L16 2l-2.505.629L12 2 2.567 4.28 0 2.99 12 0zM8 7.234l.837-.257v4.766L8 12V7.234zM12.744 6v.943l-.008.002v3.743l-2.783.754v-.944l1.85-.5v-.944l-1.85.501V6.756L12.744 6zm-1.858 1.447v.912l.918-.249v-.912l-.918.249z\";","export default \"M10.635 7.01a3 3 0 012.256 1.326L15 11.5a2.894 2.894 0 01-2.408 4.5H3.408A2.894 2.894 0 011 11.5l2.11-3.164A3 3 0 015.364 7.01a4 4 0 115.27 0zM8 6a2 2 0 100-4 2 2 0 000 4zM5.606 9a1 1 0 00-.832.445l-2.11 3.164A.894.894 0 003.408 14h9.184a.894.894 0 00.744-1.39l-2.11-3.165A1 1 0 0010.394 9H5.606z\";","export default \"M9 7h3a1 1 0 010 2H8a1 1 0 01-1-1V4a1 1 0 112 0v3zm-1 9A8 8 0 118 0a8 8 0 010 16zm0-2A6 6 0 108 2a6 6 0 000 12z\";","export default \"M7.698 16S3 7.761 3 5a5 5 0 1110 0c0 2.761-5.302 11-5.302 11zm-.552-5.342c.214.437.434.876.658 1.314.27-.467.537-.936.794-1.402.27-.492.526-.97.762-1.43C10.392 7.133 11 5.555 11 5a3 3 0 10-6 0c0 .6.543 2.191 1.47 4.226.209.46.435.939.676 1.432zM8 6.5a1.5 1.5 0 110-3 1.5 1.5 0 010 3z\";","export default \"M2 0h12a2 2 0 012 2v12a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm0 2v12h12V2H2zm2 2h2v2H4zm0 2h2v2H4zm4-2h2v2H8zm0 4h2v2H8zM6 6h2v2H6zm4 0h2v2h-2zm0 2h2v2h-2zM6 8h2v2H6zm-2 2h2v2H4zm2 0h2v2H6zm4 0h2v2h-2z\";","export default \"M8.597 7.539c.78.766.78 2.005 0 2.77l-2.354 2.314c-.784.77-2.057.77-2.84 0a1.934 1.934 0 010-2.77.894.894 0 00.005-1.274.916.916 0 00-1.286-.005 3.72 3.72 0 000 5.326 3.866 3.866 0 005.401 0l2.355-2.313a3.72 3.72 0 000-5.326.916.916 0 00-1.286.005.894.894 0 00.005 1.273zm-1.194.922a1.934 1.934 0 010-2.77l2.354-2.314a2.035 2.035 0 012.84 0c.78.766.78 2.005 0 2.77a.894.894 0 00-.005 1.274.916.916 0 001.286.005 3.72 3.72 0 000-5.326 3.866 3.866 0 00-5.401 0L6.122 4.413a3.72 3.72 0 000 5.326.916.916 0 001.286-.005.894.894 0 00-.005-1.273z\";","export default \"M4 0a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V4.87a2 2 0 00-.578-1.405L10.58.594A2 2 0 009.158 0H4zm0 2h5.158L12 4.871V14H4V2zm2 2a1 1 0 100 2h3.002a1 1 0 100-2H6zm0 3a1 1 0 100 2h4a1 1 0 100-2H6zm0 3a1 1 0 100 2h4a1 1 0 100-2H6z\";","export default \"M9.88 16l-3.68-.016c-.135 0-.903-.064-1.025-.064a.203.203 0 01-.037-.004 4.826 4.826 0 01-1.01-.32c-.132-.056-.28-.28-.096-.272.58-.06 1.188-.12 1.276-.158.1-.044-1.55-.236-1.942-.29-.026-.017-.418-.007-.586-.135-.297-.225-.232-.177-.506-.462-.107-.113-.132-.36.057-.369.188-.009 1.206-.052 1.294-.09.107-.047-1.799-.515-1.93-.54-.068-.013-.283-.127-.331-.199-.233-.34-.142-.224-.336-.606-.096-.19-.118-.452.092-.462.159-.006 1.163-.174 1.25-.212.107-.047-1.568-.645-1.7-.684a.462.462 0 01-.3-.282c-.133-.427-.138-.51-.211-.956-.03-.178.001-.396.25-.402.11-.004 1.182-.12 1.269-.157.106-.047-1.08-.556-1.31-.652-.17-.07-.35-.262-.357-.438a12.41 12.41 0 01-.007-.364c0-.34-.014-.34.017-.671.017-.177.118-.283.272-.285.154-.002 1.176-.215 1.374-.205.119.006-1.048-.686-1.202-.763a.376.376 0 01-.187-.427c.102-.435.13-.592.289-1.004.062-.163.202-.17.378-.17s.963-.145 1.37-.116c-.36-.263-.952-.51-1.077-.565-.125-.056-.132-.317-.05-.462.208-.367.234-.478.486-.791.101-.127.238-.14.497-.119.262.022 1.332-.044 1.42-.083.103-.045-.665-.493-.823-.557-.165-.068-.136-.285-.022-.385.287-.253.191-.21.5-.406.12-.077.408-.061.615-.048.52.031 1.35.059 1.413.031.077-.034-.55-.224-.715-.282-.149-.052-.078-.298.14-.375.332-.116.57-.147.917-.18.133-.008.867.02 1.039 0h3.002L9.666 0H10l-.013.003c.192.005.367.012.433.023a4.98 4.98 0 011.051.257c.135.05.215.233.176.408 0 .004-.004.005-.007.01l.143.061s.559-.07.688.01c.32.197.628.432.92.699.114.106.142.312.059.46-.003.006-.008.003-.011.009.137.138.255.266.289.314.002-.005.376-.019.475.11.25.326.48.682.684 1.058.08.15.051.355-.065.46l-.01.004c.092.187.238.492.238.492s.31.069.368.236c.15.416.275.85.368 1.291.037.176-.045.358-.181.405l-.01.001c.039.216.066.436.089.658l.011-.008c.156-.012.266.118.279.3a10.398 10.398 0 01-.065 2.103c-.022.16-.13.273-.254.273a.225.225 0 01-.044-.004c-.003-.001-.003-.006-.007-.007a9.326 9.326 0 01-.13.647c.003 0 .005-.002.007-.001.133.062.203.251.156.423a9.2 9.2 0 01-.447 1.249c-.049.106-.133.167-.222.167-.044 0-.156.011-.159.008-.093.191-.169.31-.272.489.004.004.009.001.013.006.11.116.124.323.035.464a7.347 7.347 0 01-.748.984.223.223 0 01-.167.08 3.18 3.18 0 01-.307-.025c-.137.138-.166.168-.31.29 0 .004.004.004.006.008.073.156.034.36-.087.452-.307.236-.63.439-.96.603a.21.21 0 01-.092.022c-.104 0-.605.02-.605.02s-.276.367-.415.401a3.17 3.17 0 01-.725.087l-.302-.001zM8.666.37c-.177.06-.34.124-.476.192-.54.033-1.916.25-1.843.28.077.031.54-.007 1.05-.001.089.001.247.026.052.145-.219.134-.416.296-.626.447-.245.176-.432.22-.566.25-.614.135-1.635.479-1.57.504.07.03.471-.001.933-.001.122 0 .325.031.141.266-.187.24-.385.476-.565.728a1.248 1.248 0 01-.633.483c-.6.218-1.243.542-1.187.565.06.024.366.007.741.001.148-.003.44.05.297.368-.158.351-.266.724-.393 1.096a.695.695 0 01-.357.422c-.486.261-.99.578-.939.6.052.02.405.005.754-.01.113-.005.318.055.278.354a7.26 7.26 0 00-.057.983c0 .099.015.197.007.295-.03.346-.193.395-.295.46-.38.248-.726.519-.68.538.052.022.402.018.747.009a.353.353 0 01.366.29c.072.404.19.793.297 1.178.074.267-.05.398-.128.455-.338.246-.674.523-.628.542.06.024.492.001.873.006.243.004.35.135.385.204.17.332.36.65.57.953.065.094.157.299-.07.458-.26.184-.528.379-.482.398.064.026.572.011.973.005a.577.577 0 01.441.168c.229.23.47.445.726.643.076.06.22.176.062.29-.136.097-.245.197-.195.218.062.025.334.03.65.008a.685.685 0 01.372.077c.255.137.555.261.868.372a7.916 7.916 0 01-1.12-.64c.294-.128-.456-.609-.519-.39a7.678 7.678 0 01-1.05-1.04c.41-.076-.31-.83-.452-.6a7.818 7.818 0 01-.714-1.305c.536-.134-.061-.98-.291-.788a8.996 8.996 0 01-.35-1.666c.504-.009.32-.984-.059-.849a9.904 9.904 0 01.088-1.655c.352.154.536-.913.146-.791.133-.58.32-1.126.553-1.635.296.33.8-.84.382-.734a7.92 7.92 0 01.967-1.315c.14.427.997-.496.536-.533.283-.255.582-.487.896-.695-.083.38 1.003-.269.523-.318.186-.103.377-.198.571-.286zm1.544 2.548c-1.973 0-3.572 2.276-3.572 5.084 0 2.807 1.6 5.083 3.572 5.083 1.973 0 3.571-2.277 3.571-5.083 0-2.808-1.598-5.084-3.571-5.084z\";","export default \"M14 12v4H0v-4h14zm2 0v4h-1v-4h1zM14.779 1C15.472 2.06 16 2.96 16 5.072c0 2.11-1.172 2.937-1.221 4.928C13.965 9.289 13 8.646 13 6.379 13 4.6 14.8 3.012 14.779 1zm-1.593-1c.462.471.814.871.814 1.81 0 .938-.781 1.305-.814 2.19C12.643 3.684 12 3.398 12 2.39 12 1.6 13.2.895 13.186 0z\";","export default \"M14.983 3.158a.355.355 0 00-.167-.211l-2.67-1.417a11.585 11.585 0 00-1.73-.523.278.278 0 00-.06-.007c-.145 0-.275.115-.307.283C9.836 2.363 9.004 3.17 8 3.17s-1.836-.808-2.049-1.887C5.918 1.115 5.79 1 5.645 1a.26.26 0 00-.061.007c-.584.128-1.163.302-1.732.523L1.184 2.947a.348.348 0 00-.166.21.407.407 0 00.017.285L2.193 6.07c.055.125.165.2.282.2.03 0 .06-.005.09-.015l1.287-.439v8.82c0 .2.143.364.317.364h7.662c.174 0 .316-.163.316-.364v-8.82l1.288.439c.03.01.06.015.09.015a.314.314 0 00.282-.2l1.159-2.628a.415.415 0 00.017-.284z\";","export default \"M0 8.123l16 3.972c-.624 1.006-1.39 1.698-2.098 1.532L.93 10.59C.223 10.424-.033 9.267 0 8.123zm1.746-5.684a.719.719 0 01.828-.418.534.534 0 01.41.476l.02.265c.068.921.719 1.676 1.656 1.924 1.335.352 2.84-.406 3.353-1.69l.156-.39a.894.894 0 011.03-.518.69.69 0 01.41.29l.91 1.74-1.866.347.556.606 1.84-.364.454.51-1.863.345.549.582 1.716-.362.398.483-1.513.406.537.556 1.482-.391c.53.722.91 1.164 1.874 1.544l.521.26c.968.433.766 1.341.796 2.297L0 6.993z\";","export default \"M8.058 3.306c.263-.233 1.105-.646 1.796.213.335.418.36 1.01.155 1.48l.075.673 1.687-.691c.344-.143.733.05.863.43.13.382-.047.805-.394.947l-.153.063.47 2.554c.077-.006.154-.013.233-.013 1.77 0 3.21 1.579 3.21 3.519C16 14.42 14.56 16 12.79 16s-3.21-1.579-3.21-3.52c0-.506.1-.988.278-1.424l-.62-.41-.955 1.715a.925.925 0 01-.803.493.875.875 0 01-.488-.15c-.443-.297-.583-.93-.313-1.416l1.048-1.882-1.962-.873h-.578l-.356.915c.949.612 1.59 1.74 1.59 3.033C6.42 14.42 4.98 16 3.21 16S0 14.421 0 12.48c0-1.94 1.44-3.518 3.21-3.518.306 0 .6.05.881.138l.221-.567c-.295-.002-.534-.264-.534-.588 0-.31.22-.556.496-.58a1.12 1.12 0 01.05-.584c.059-.155.149-.283.257-.387zM3.21 9.845c-1.326 0-2.405 1.182-2.405 2.636 0 1.454 1.08 2.636 2.405 2.636 1.189 0 2.172-.951 2.364-2.195H3.88a.771.771 0 01-.67.42c-.433 0-.785-.386-.785-.861 0-.435.296-.791.678-.849l.667-1.708a2.19 2.19 0 00-.56-.08zm9.58 0l-.072.008.334 1.82a.856.856 0 01.523.808c0 .475-.352.86-.785.86-.433 0-.785-.385-.785-.86v-.003l-1.448-.96a2.83 2.83 0 00-.172.963c0 1.454 1.079 2.636 2.405 2.636 1.326 0 2.405-1.182 2.405-2.636 0-1.454-1.079-2.636-2.405-2.636zm-8.28.424l-.666 1.709.036.062h1.694a2.652 2.652 0 00-1.064-1.77zm7.418-.242a2.417 2.417 0 00-.95.74l1.237.818zm-3.13-3.774l-1.056.937 1.715.764a.999.999 0 01.54.631c.086.287.053.601-.091.859l-.25.448.619.41a3.238 3.238 0 011.492-1.153l-.444-2.415-1.566.642a.62.62 0 01-.583-.06.743.743 0 01-.318-.539l-.059-.524zM9.207.74a1.5 1.5 0 112.585 1.52A1.5 1.5 0 019.207.74z\";","export default \"M8.991 0v9.46l1.643-2.451 5.366.04-.015 1.981-4.293-.032L7.002 16V5.42L3.946 9.022H0V7.041h3.023z\";","export default \"M9.03 0a2 2 0 012 1.997V5h-2l-.001-3H3.05l2.16 1.674a3 3 0 011.817 2.752l.025 4.572L5.72 11h3.314l-.001-2h2l.001 2.008a2 2 0 01-2 1.992H7.026v.765a2 2 0 01-2.894 1.79l-3.026-3.01A2 2 0 010 10.753l.023-8.756a2 2 0 012-1.997H9.03zM2.018 3.649L2 10.756l3.026 3.01V11h.027l-.025-4.57a1 1 0 00-.606-.918L2.02 3.65zm11.474 1.015l1.843 1.843a.697.697 0 010 .986l-1.843 1.843a.697.697 0 11-.986-.985l.351-.352L9.888 8C9.399 8 9 7.552 9 7s.398-1 .889-1h2.968l-.35-.35a.697.697 0 01.986-.986z\";","export default \"M6 0a6 6 0 014.891 9.476l4.816 4.817a1 1 0 01-1.414 1.414l-4.817-4.816A6 6 0 116 0zm0 2a4 4 0 100 8 4 4 0 000-8zm0 1a1 1 0 011 1v1h1a1 1 0 110 2H7v1a1 1 0 11-2 0V7H4a1 1 0 110-2h1V4a1 1 0 011-1z\";","export default \"M6 0a6 6 0 014.891 9.476l4.816 4.817a1 1 0 01-1.414 1.414l-4.817-4.816A6 6 0 116 0zm0 2a4 4 0 100 8 4 4 0 000-8zm2 3a1 1 0 110 2H4a1 1 0 110-2h4z\";","export default \"M6 0a6 6 0 014.891 9.476l4.816 4.817a1 1 0 01-1.414 1.414l-4.817-4.816A6 6 0 116 0zm0 2a4 4 0 100 8 4 4 0 000-8z\";","export default \"M11.784.089l.07.057 4 4a.501.501 0 01.057.638l-.057.07L12.707 8l.147.146a.501.501 0 01.057.638l-.057.07-5.965 5.964a4.062 4.062 0 01-2.626 1.175L4.036 16a4.009 4.009 0 01-2.854-1.182A4.006 4.006 0 010 11.964a4.06 4.06 0 011.026-2.687l.156-.166 5.964-5.965a.501.501 0 01.638-.057l.07.057.146.147L11.146.146a.501.501 0 01.638-.057zM3.293 11.293a1 1 0 101.416 1.414 1 1 0 00-1.416-1.414zM11.5 1.207L8.707 4l1.011 1.011 1.463-1.463 1.362 1.362-1.464 1.462.921.921.007-.007L14.793 4.5 11.5 1.207z\";","export default \"M8 0a8 8 0 110 16A8 8 0 018 0zm0 12a1 1 0 100 2 1 1 0 000-2zM8 2C5.794 2 4 3.73 4 5.857c0 .533.448.964 1 .964s1-.431 1-.964c0-1.063.897-1.928 2-1.928s2 .865 2 1.928c0 1.064-.897 1.929-2 1.929-.552 0-1 .431-1 .964v1.286l.007.112c.057.48.48.852.993.852.552 0 1-.432 1-.964v-.444l.19-.052C10.816 9.05 12 7.585 12 5.857 12 3.73 10.206 2 8 2z\";","export default \"M8 0a8 8 0 110 16A8 8 0 018 0zm0 2a6 6 0 100 12A6 6 0 008 2zm0 5a1 1 0 011 1v3a1 1 0 01-2 0V8a1 1 0 011-1zm0-3a1 1 0 110 2 1 1 0 010-2z\";","import { bubble, listen } from \"svelte/internal\";\nimport icons from \"./icons\";\n\nexport function getEventsAction(component) {\n  return (node) => {\n    const events = Object.keys(component.$$.callbacks);\n    const listeners = [];\n\n    events.forEach((event) =>\n      listeners.push(listen(node, event, (e) => bubble(component, e)))\n    );\n\n    return {\n      destroy: () => {\n        listeners.forEach((listener) => listener());\n      },\n    };\n  };\n}\n\n\nexport function getSVGIconObjet(input) {\n  const iconObject = { viewbox: 16, pathes:[] }\n\n  let raw = (icons[input]) ? icons[input] : input;\n\n  if(typeof raw === 'string' && raw.startsWith(\"M\")) return (iconObject.pathes.push({path:raw}),iconObject);\n\n  if (Array.isArray(raw)) iconObject.pathes = raw;\n  if( typeof raw === 'object'){\n    if(raw.viewbox) iconObject.viewbox = raw.viewbox;\n    if(raw.pathes) iconObject.pathes = Array.isArray(raw.pathes) ? raw.pathes : [raw.pathes];\n  }\n\n  iconObject.pathes = iconObject.pathes.map(p => {\n    if(typeof p === 'string' && p.startsWith(\"M\")) return {path:p};\n    if(typeof p === 'object' && p.path) return p;\n    return {};\n  }).filter(p=>!!p.path);\n\n  return iconObject;\n}\n","<script>\n  export let type = \"body1\";\n  export let block = false;\n</script>\n\n<span\n  class={`aa-typography ${type.toLowerCase()} ${$$props.class || ''}`}\n  class:block\n  style={$$props.style || ''}>\n  <slot />\n</span>\n\n<style>\n  .aa-typography {\n    font-family: var(--preferred-font);\n    font-stretch: normal;\n    font-style: normal;\n    letter-spacing: normal;\n  }\n  .block {\n    display: block;\n  }\n  .headline {\n    color: var(--palette-main-1);\n    font-size: 24px;\n    font-weight: 500;\n    line-height: 1.5;\n  }\n  .title {\n    font-size: 24px;\n    font-weight: 500;\n    line-height: 1.5;\n    color: var(--palette-main-1);\n  }\n  .subheader {\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.5;\n    color: var(--palette-main-1);\n  }\n  .inputtext {\n    font-size: 18px;\n    font-style: normal;\n    line-height: 1.33;\n    color: var(--palette-main-1);\n  }\n  .infotext {\n    font-size: 18px;\n    font-style: normal;\n    line-height: 1.33;\n    color: var(--palette-noactive-4);\n  }\n  .body1,\n  .accent, .white {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.5;\n    color: var(--palette-main-1);\n  }\n  .white{\n    color: var(--palette-white);\n  }\n  .body2 {\n    font-size: 16px;\n    font-style: normal;\n    line-height: 1.5;\n    color: var(--palette-main-1);\n  }\n  .body3 {\n    font-size: 12px;\n    font-weight: normal;\n    line-height: 1.5;\n    color: var(--palette-noactive-3);\n  }\n  .button {\n    font-size: 14px;\n    font-weight: bold;\n    line-height: 1.14;\n    color: var(--palette-noactive-3);\n  }\n  .caption {\n    font-size: 14px;\n    font-weight: normal;\n    line-height: 1.5;\n    color: var(--palette-noactive-3);\n  }\n  .tabtitle {\n    font-size: 11px;\n    font-weight: normal;\n    line-height: 1.36;\n    color: var(--palette-main-2);\n    text-transform: uppercase;\n  }\n  .linkunderline {\n    font-size: 16px;\n    font-weight: normal;\n    line-height: 1.5;\n    color: var(--palette-primary-1);\n    text-decoration: underline;\n  }\n  .link {\n    font-size: 16px;\n    font-weight: normal;\n    line-height: 1.5;\n    color: var(--palette-primary-1);\n  }\n  .tabactive {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.5;\n    color: var(--palette-main-1);\n  }\n  .tabdefault {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.5;\n    color: var(--palette-noactive-3);\n  }\n</style>\n","<script>\n  import { getSVGIconObjet } from \"./utils\";\n\n  export let icon = \"\";\n  export let size = 24;\n  export let status = \"primary\";\n  export let type = \"flat\";\n\n  $: iconObject = getSVGIconObjet(icon);\n\n  $: viewBoxAdjusted = iconObject.viewbox + 6;\n  $: translate = (viewBoxAdjusted - iconObject.viewbox * 0.8) / 2;\n</script>\n\n<svg\n  width={size}\n  height={size}\n  viewBox=\"0 0 {viewBoxAdjusted}\n  {viewBoxAdjusted}\"\n  class={`aa-iconStatus ${$$props.class || ''}`}\n  style={$$props.style || ''}>\n  <circle\n    cx={viewBoxAdjusted / 2}\n    cy={viewBoxAdjusted / 2}\n    r={(viewBoxAdjusted - 2) / 2}\n    class={`${status} ${type}`}\n    stroke-width=\"2\" />\n  <g\n    transform=\"translate({translate},{translate}) scale(0.8)\"\n    class={`icon ${type}`}>\n    {#each iconObject.pathes as { path, color }}\n      <path style={color ? `fill: ${color}` : null} d={path} />\n    {/each}\n  </g>\n</svg>\n\n<style>\n  circle {\n    fill: none;\n  }\n  .icon.flat {\n    fill: var(--palette-main-1);\n  }\n  .icon.filled {\n    fill: var(--palette-white);\n  }\n  .primary {\n    stroke: var(--palette-primary-1);\n  }\n  .positive {\n    stroke: var(--palette-positive-1);\n  }\n  .negative {\n    stroke: var(--palette-negative-1);\n  }\n  .disabled {\n    stroke: var(--palette-main-1);\n  }\n  .noactive {\n    stroke: var(--palette-noactive-3);\n  }\n  .warning {\n    stroke: var(--palette-warning-1);\n  }\n  .primary.filled {\n    fill: var(--palette-primary-1);\n  }\n  .positive.filled {\n    fill: var(--palette-positive-1);\n  }\n  .negative.filled {\n    fill: var(--palette-negative-1);\n  }\n\n  .disabled.filled {\n    fill: var(--palette-main-1);\n  }\n  .noactive.filled {\n    fill: var(--palette-noactive-3);\n  }\n  .warning.filled {\n    fill: var(--palette-warning-1);\n  }\n</style>\n","<script>\n  import { getSVGIconObjet } from \"./utils\";\n\n  export let icon = \"\";\n  export let size = 16;\n  export let status = \"\";\n\n  $: iconObject = getSVGIconObjet(icon);\n</script>\n\n<svg\n  width={size}\n  height={size}\n  viewBox=\"0 0 {iconObject.viewbox}\n  {iconObject.viewbox}\"\n  class={`aa-icon ${status} ${$$props.class || ''}`}\n  style={$$props.style || null}>\n  <g>\n    {#each iconObject.pathes as { path, color }}\n      <path style={color ? `fill: ${color}` : null} d={path} />\n    {/each}\n  </g>\n</svg>\n\n<style>\n  .aa-icon {\n    fill: var(--palette-main-1);\n  }\n  .aa-icon.primary {\n    fill: var(--palette-primary-1);\n  }\n  .aa-icon.positive {\n    fill: var(--palette-positive-1);\n  }\n  .aa-icon.negative {\n    fill: var(--palette-negative-1);\n  }\n  .aa-icon.white {\n    fill: var(--palette-white);\n  }\n  .aa-icon.disabled {\n    fill: var(--palette-main-1);\n  }\n  .aa-icon.noactive {\n    fill: var(--palette-noactive-3);\n  }\n</style>\n","<script>\n  import Icon from \"./Icon.svelte\";\n  import Typography from \"./Typography.svelte\";\n\n  export let size = 40;\n  export let status = \"noactive\";\n</script>\n\n<div class={`aa-loader ${$$props.class || ''}`} style={$$props.style || ''}>\n  <svg class=\"icon\" width={size} height={size} viewBox=\"25 25 50 50\">\n    <circle\n      class={`path ${status}`}\n      cx=\"50\"\n      cy=\"50\"\n      r=\"20\"\n      fill=\"none\"\n      stroke-width=\"6\"\n      stroke-miter-limit=\"10\" />\n  </svg>\n  <Typography>\n    <slot />\n  </Typography>\n</div>\n\n<style>\n  .aa-loader {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n  .icon {\n    animation: rotate 2s linear infinite;\n    transform-origin: center;\n  }\n  .path {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n    animation: dash 1.5s ease-in-out infinite;\n    stroke: var(--palette-noactive-1);\n    stroke-linecap: round;\n  }\n  .path.primary {\n    stroke: var(--palette-primary-1);\n  }\n  .path.positive {\n    stroke: var(--palette-positive-1);\n  }\n  .path.negative {\n    stroke: var(--palette-negative-1);\n  }\n  .path.white {\n    stroke: var(--palette-white);\n  }\n  .path.disabled {\n    stroke: var(--palette-main-1);\n  }\n  .path.noactive {\n    stroke: var(--palette-noactive-3);\n  }\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 200;\n      stroke-dashoffset: 0;\n    }\n\n    50% {\n      stroke-dasharray: 89, 200;\n      stroke-dashoffset: -35px;\n    }\n\n    100% {\n      stroke-dasharray: 89, 200;\n      stroke-dashoffset: -124px;\n    }\n  }\n</style>\n","<script>\nexport let size = 8;\n</script>\n<div style={`height: ${size}px`}/>","<script>\n  import { onMount } from \"svelte\";\n  import { getEventsAction } from \"./utils\";\n  import { current_component } from \"svelte/internal\";\n  import Typography from \"./Typography.svelte\";\n  import IconStatus from \"./IconStatus.svelte\";\n  import Loader from \"./Loader.svelte\";\n  import Spacer from \"./Spacer.svelte\";\n  import Icon from \"./Icon.svelte\";\n\n  export let disabled = false;\n  export let isLoading = false;\n  export let title = \"Drag file here or\";\n  export let buttonTitle = \"Select file\";\n  export let activeTitle = \"Drop file for upload\";\n  export let fileLoadingTitle = \"File is loading\";\n  export let fileTitle = \"\";\n  export let error = \"\";\n  export let dropOnPage = false;\n\n  const events = getEventsAction(current_component);\n  let isActive = false;\n  let overlayRef = null;\n  let throttleRef = null;\n\n  const highlight = e => changeHighlight(e, true);\n  const unhighlight = e => changeHighlight(e, false);\n\n  const changeHighlight = (e, val) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (isLoading && disabled) return;\n    clearTimeout(throttleRef);\n    throttleRef = setTimeout(() => (isActive = val), val ? 0 : 10);\n  };\n\n  onMount(() => {\n    if (dropOnPage) {\n      document.body.addEventListener(\"dragenter\", highlight, false);\n      document.body.addEventListener(\"dragover\", highlight, false);\n      document.body.addEventListener(\"dragleave\", unhighlight, false);\n      document.body.addEventListener(\"drop\", unhighlight, false);\n    }\n    document.body.appendChild(overlayRef);\n    return () => {\n      document.body.removeChild(overlayRef);\n      document.body.removeEventListener(\"dragenter\", highlight, false);\n      document.body.removeEventListener(\"dragover\", highlight, false);\n      document.body.removeEventListener(\"dragleave\", unhighlight, false);\n      document.body.removeEventListener(\"drop\", unhighlight, false);\n    };\n  });\n</script>\n\n<label\n  class={`aa-DropZone ${$$props.class}`}\n  class:isActive={isActive && !dropOnPage}\n  class:isLoading\n  class:disabled\n  width:400px\n  on:dragenter={highlight}\n  on:dragover={highlight}\n  on:dragleave={unhighlight}\n  on:drop={unhighlight}\n  use:events>\n  <input type=\"file\" disabled={disabled || isLoading} class=\"fileInput\" />\n  {#if isActive && !isLoading && !dropOnPage}\n    <Icon icon=\"download\" status=\"primary\" size={40} />\n    <Spacer size={16} />\n    <Typography type=\"link\">{activeTitle}</Typography>\n  {:else if isLoading}\n    <Loader status=\"primary\" size={40} />\n    <Spacer size={16} />\n    <Typography type=\"link\">{fileLoadingTitle}</Typography>\n  {:else}\n    {#if fileTitle}\n      <div class=\"fileNameContainer\">\n        <IconStatus\n          icon={error ? 'close' : 'check'}\n          size={16}\n          status={error ? 'negative' : 'positive'} />\n        <div class=\"fileTitle\">{fileTitle}</div>\n      </div>\n      {#if error}\n        <Spacer size={8} />\n        <div class=\"error\">{error}</div>\n      {/if}\n    {:else}\n      <Typography type=\"infotext\">{title}</Typography>\n    {/if}\n    <Spacer size={16} />\n    <Typography type={disabled ? 'infotext' : 'link'}>{buttonTitle}</Typography>\n  {/if}\n</label>\n\n<div>\n  <div bind:this={overlayRef}>\n    {#if isActive && dropOnPage}\n      <div class=\"overlay\" />\n      <div class=\"overlayContent\" use:events>\n        <Icon icon=\"download\" status=\"white\" size={80} />\n        <Spacer size={16} />\n        <div class=\"fullPageText\">{activeTitle}</div>\n      </div>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .fullPageText {\n    font-family: var(--preferred-font);\n    font-size: 24px;\n    font-weight: 500;\n    text-align: center;\n    color: var(--palette-white);\n  }\n  .aa-DropZone {\n    background: white;\n    border-radius: 5px;\n    border: 2px dashed rgb(0, 135, 247);\n    border-image: none;\n    max-width: 500px;\n    margin-left: auto;\n    margin-right: auto;\n    white-space: -moz-pre-wrap !important;  /* Mozilla, since 1999 */\n    white-space: -pre-wrap;      /* Opera 4-6 */\n    white-space: -o-pre-wrap;    /* Opera 7 */\n    white-space: pre-wrap;       /* css-3 */\n    word-wrap: break-word;       /* Internet Explorer 5.5+ */\n    white-space: -webkit-pre-wrap; /* Newer versions of Chrome/Safari*/\n    word-break: break-all;\n    white-space: normal;\n  }\n  .fileInput {\n    display: none;\n  }\n  .isActive {\n    border: dashed 2px var(--palette-primary-1);\n    background-color: var(--palette-primary-7);\n  }\n  .isLoading {\n    border: dashed 2px var(--palette-primary-1);\n    background-color: var(--palette-primary-7);\n    cursor: initial;\n  }\n  .error {\n    font-display: var(--preferred-font);\n    font-size: 14px;\n    color: var(--palette-negative-1);\n  }\n  .fileNameContainer {\n    display: flex;\n    align-items: center;\n  }\n  .disabled {\n    cursor: initial;\n    background-color: var(--palette-noactive-6);\n  }\n  .overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: var(--palette-primary-1);\n    opacity: 0.85;\n  }\n  .overlayContent {\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-radius: 8px;\n    border: dashed 4px var(--palette-white);\n    margin: 16px;\n  }\n  .fileTitle {\n    margin-left: 8px;\n    font-size: 14px;\n    font-family: var(--preferred-font);\n    color: var(--palette-noactive-3);\n  }\n  \n</style>\n","/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport default api;\n","<script>\n\timport { Router, Link, Route } from \"svelte-navigator\";\n\timport DropZone from \"svelte-atoms/DropZone.svelte\";\n    import Cookie from \"js-cookie\";\n\n    $: result = '';\n    let msg = '';\n    let Domain = 'http://127.0.0.1:8000/api/v1/';\n\tlet fileName = \"\";\n    let fileSize = 0.0;\n    let disabled = false;\n    let buttonTitle = 'Select file';\n    let category = '';\n    let End = false;\n    let New = false;\n    let fileType = \"\";\n    let ErrorMsg = ''; \n    const onChange = async e =>  {\n        ErrorMsg= '';\n        End = false;\n    const file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    fileName = file ? file.name : \"\";\n    fileSize = file ? file.size : 0.0;\n    fileType = file ? file.type : \"\";\n    if (fileSize > 5000000){\n        ErrorMsg = \"The File size is greater than the 5 MB limit\";\n        buttonTitle = 'Error!';\n        End = true;\n        return;\n    }\n    if (fileType != \"application/vnd.android.package-archive\"){\n        ErrorMsg = \"Only APK files are accepted\";\n        buttonTitle = 'Error!';\n        End = true;\n        return;\n    }\n\n    disabled = true;\n    buttonTitle = 'The file is being processed...'\n    let reader = new FileReader();\n        reader.onload = function(ev) {\n            // \n            crypto.subtle.digest('SHA-256', ev.target.result).then( async hashBuffer => {\n                // Convert hex to hash, see https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#converting_a_digest_to_a_hex_string\n                const hashArray = Array.from(new Uint8Array(hashBuffer));\n                const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\n                 let hashResponse = await post(hashHex);\n                 console.log(hashResponse);\n                if (hashResponse != -1){\n                    if (hashResponse == 0){\n                        category = \"SMS Malware\";\n                    }\n                    else if (hashResponse == 1){\n                        category = \"Benign\";\n                    }\n                    else if (hashResponse == 2){\n                        category = \"Banking Malware\";\n                    }\n                    else if (hashResponse == 3){\n                        category = \"Adware\";\n                    } else  if (hashResponse == 4){\n                        category = \"Riskware\";\n                    }else{\n                        ErrorMsg = hashResponse;\n                    }\n                    msg = \"I know this file! There is no need to upload it.\" + \"\\n\" + \"It is \" + category;\n                    End = true;\n                }\n                else {\n                    msg = 'I did not see this file before..uploading it...';\n                    New = true;\n                    let uploading = await upload(file);\n                     if (uploading == 0){\n                        category = \"SMS Malware\";\n                    }\n                    else if (uploading == 1){\n                        category = \"Benign\";\n                    }\n                    else if (uploading == 2){\n                        category = \"Banking Malware\";\n                    }\n                    else if (uploading == 3){\n                        category = \"Adware\";\n                    } else if (uploading == 4){\n                        category = \"Riskware\";\n                    }else{\n                        ErrorMsg = uploading;\n                    }\n                    msg = \"I think that this App is \" + category;\n                    End = true;\n                }\n                \n                \n            }).catch(ex => console.error(ex));\n        };\n        reader.onerror = function(err) {\n            console.error(\"Failed to read file\", err);\n            msg= 'Failed to read the file'\n        }\n        \n        reader.readAsArrayBuffer(file);\n        // if (New){\n            \n        // }\n    };\n    async function post(hashHex) {\n   \n\n    const res = await fetch(Domain+'hash/',\n   \n    {\n\t\t\tmethod: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Token ${Cookie.get(\"token\")}`,\n            },\n\t\t\tbody: JSON.stringify({\n\t\t\t\t\"hash\": hashHex,\n\n\t\t\t})\n\t\t}).catch(function() {\n            ErrorMsg = \"could not connect to the server\"\n        });\n\t\t if (res.ok) {\n            const json = await res.json();\n            result = JSON.stringify(parseInt(json['result'],10));\n            if (result.length > 2){\n            result = JSON.stringify(json['result']);\n           }\n         }else{\n             return ErrorMsg;\n         }\n         \n\n         return result;\n  }\n  async function upload(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n   const res = await fetch(Domain,\n  \n   {\n           method: \"POST\",\n          \n\n           body:  formData\n\n           \n       }).catch(function() {\n            return \"could not connect to the server\"\n        });\n        if (res.ok) {\n           const json = await res.json();\n           \n           result = JSON.stringify(parseInt(json['result'],10));\n           if (result.length > 2){\n            result = JSON.stringify(json['result']);\n           }\n                   \n        }\n\n        return result;\n }\n  </script>\n\n\n\t  \n\n  <Router>\n    <header>\n\t<nav class=\"navMenu\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"about\">About</Link>\n        <div class=\"dot\"></div>\n\t</nav>\n    </header>\n\t<div>\n        <main>\n            <h1>ScanAndro<sup>Beta</sup></h1>\n\t\t<Route path=\"/\">\n           \n                \n                <p>Upload APK file Here to analyze it.</p>\n              <p>By submitting data below, you are agreeing to our  <Link to=\"terms\">Terms of Service</Link> and <Link to=\"privacy\">Privacy Policy</Link>.\n              </p>\n                <DropZone buttonTitle={buttonTitle} disabled={disabled} fileTitle={fileName} dropOnPage on:drop={onChange} on:change={onChange}/>\n                {#if ErrorMsg}\n                <p>{ErrorMsg}</p>\n                {:else}\n                <p>{msg}</p>\n                {/if}\n                {#if New && !End }\n                    <p>The Analyzing process can take up to ten minutes. please be patient</p>\n                    <p>The server will automatically terminate the process after 10 minutes</p>\n                {/if}\n                \n                {#if End}\n                    <p>End.</p>\n                {/if}\n            \n           \n\t\t</Route>\n        <Route path=\"about\">\n            <div class=\"about\">\n            <h3>About</h3>\n            <p>ScanAndro is an Android Malware Detection system based on static analysis \n                and Deep Learning. It is made by <a href=\"https://www.linkedin.com/in/mulham-alibrahim/\">me</a> as my graduation project\n                from computer engineering department - Turkish-German University.\n            </p>\n            <b>How it wokrs</b>\n\n                <ul>\n                    <li>When you select or drop a valid APK file, the website calculate its hash\n                         and send it to the server to check whether it exists in the database.\n                    </li>\n                    <li>If the hash of the file exists in the databse, the category of it is directly\n                        given without the need to upload it.\n                    </li>\n                    <li>\n                        If the hash does not exist then the file will be uploaded to the server.\n                    </li>\n                    <li>\n                        when the file is uploaded to the server, the server will perform many processes to analyze and extract\n                        specific data from it. which will be passesd then to the trained deep learning model to predict the category.\n                    </li>\n                   \n                </ul><br>\n                The prediction of the category of the APK file can be one of the following:\n                <ul>\n                <li><b>Benign</b> which means that the app is predicted to be safe to use.</li>\n                <li><b>SMS Malware</b> the app is predicted to be malicious targeting personal and ctitic information in text messages.</li>\n                <li><b>Banking Malware</b> the app is predicted to be malicious targeting Banking information, when you use banking apps in your mobile.</li>\n                <li><b>Adware</b> the app is predicted to be malicious delivering annoying and unwanted popup advertisments.</li>\n                <li><b>Riskware</b> which means the app is predicted to have potential risk due to security vulnerabilities, software incompatibility, or legal violations.</li>\n            </ul><br>\n            <b>Limits</b>\n            <p>Due to limits in softwares and resources, the server right now can not accept files that are more than 5MB in size. \n                 </p>\n                \n                 <b>Contact</b>\n               \n                 <p>For questions, suggestions, or anything else you can contact me at: mulham@scanandro.com</p>\n            </div>\n          </Route>\n          <Route path=\"terms\"> \n            <div class=\"about\">\n              <p>These Terms of Service govern your access to and use of www.scanandro.com, and its products and services, and any uploaded, downloaded or appearing on the Service.\n                Whether you are a member of the public, an antivirus, scanning, sandbox or other security partner, or a security-minded organization using and contributing Samples to the Service, by using any part of the Service, you agree and consent to these Terms of Service including terms that limit our liability or affect your legal rights, any referenced and incorporated guidelines and policies, including our Sample & Community Content Guidelines (which explain how to safely share Samples through the Service), the terms of our <Link to=\"/privacy\">Privacy Policy</Link> (which explains how we may collect, use and share personal information you provide to us), and any additional terms specific to your particular use of the Service which become part of your agreement with us. If you are using the Service on behalf of a business, you represent to us that you have authority to bind that business or entity to these Terms, and that business accepts these Terms. </p>\n                <b>Restrictions on Your Use of the Service</b>\n                <br><br>\n                You agree that you may not use or attempt to:\n                <ul>\n                    <li>Use the Service in any way that breaches any applicable local, national, or international law or regulation.</li>\n                    <li>Use the Service in any way which could infringe the rights or interests of ScanAndro, or the Community,\n                        including for example, to prove or disprove a concept or discredit, or bait any actor in the anti-malware space.\n                    </li>\n                    <li>Copy, reproduce, alter, modify, create derivative works, publicly display, republish, upload, post, transmit, resell or distribute in any way material, information or functionalities from the Service – including, without limitation, using the Service in any way for antivirus/URL scanner testing or that could directly or indirectly harm, compete with, or otherwise hinder the antivirus industry/URL scanner industry.</li>\n                    <li>Transfer any rights granted to you under the Terms.</li>\n                    <li>Use the Service for any illegal activity or output, or in any way that exposes ScanAndro, you, or members of the Community to harm.</li>\n                    <li>Engage in any activity that could damage, overload, harm or impede the normal functioning of the Service.</li>\n                    <li>Obtain or use any Samples except as specifically permitted by the Service or use or attempt to use the Service to mine information in any way that could identify individual persons in their private capacity, attempt to access or misappropriate content contained in any Sample, or otherwise use the Service or Samples for any purpose other than to detect and prevent malware in a non-commercial personal or organizational capacity.</li>\n                    <li>Attempt to gain unauthorized access to our Site, the server on which our Site is stored or any server, computer or database connected to our Site.</li>\n                    <li>Attack, or attempt to attack our Site via a denial-of-service attack or a distributed denial-of service attack.</li>\n                    <li>Use or allow any third party under your control to submit Samples that are subject to the International Traffic in Arms Regulations (“ITAR”) maintained by the U.S. Department of State,  or otherwise use the Service except as expressly allowed under these Terms.</li>\n                   \n                </ul>\n                <br><br>\n                <b>Sample & Community Content Guidelines</b>\n                <br><br>\n                <p>\n                    To the extent you elect to contribute any Sample to the Community, you confirm that all content contained in the Sample complies with these Terms and our <Link to=\"/privacy\">Privacy Policy</Link>, that you are either the original owner of the Sample you submit or that you have the necessary rights and permissions to irrevocably contribute the Sample and share it, and information about it, with the Community.\n                    <br><br>\n                    You understand that if you submitting any Sample, the Sample is immediately shared for review by us and the Service’s Partners, and the resulting intelligence report is shared with you and with the Partners, which use the results to improve their own systems. As such, by contributing a Sample, you are contributing to the effort to raise global IT security levels.\n                    <br><br>\n                    While you retain any ownership rights in the original material contained in the Sample, when you upload or otherwise submit a copy of the Sample, you give ScanAndro (and those we work with) a worldwide, royalty free, irrevocable and transferable licence to use, edit, host, store, reproduce, modify, create derivative works, communicate, publish, publicly perform, publicly display and distribute all content contained in the Sample.\n                    <br><br>\n                    YOU FURTHER AGREE THAT YOU WILL ONLY UPLOAD SAMPLES THAT YOU WISH TO PUBLICLY SHARE AND THAT IN ANY CASE, YOU WILL NOT KNOWINGLY SUBMIT ANY SAMPLE TO THE SERVICE THAT CONTAINS CONFIDENTIAL OR COMMERCIALLY SENSITIVE DATA OR PERSONAL DATA OF ANY INDIVIDUAL WITHOUT LAWFUL PERMISSION.\n                    <br><br>\n                    Although we have no obligation to monitor use of the Service, user Content or any Samples, we may monitor the Service to detect and prevent fraudulent activity or violations of these Terms and retain absolute discretion to remove Samples, Content or users from the Service at any time and for any reason without notice. \n                    <br><br>\n                    IF YOU DO NOT WANT TO PUBLICLY SHARE A SAMPLE IN THE MANNER SET OUT IN THESE TERMS OR IN THE <Link to=\"/privacy\">PRIVACY POLICY</Link>, DO NOT SEND IT/CONTRIBUTE IT TO THE SERVICE AS THE SERVICE IS DESIGNED TO WORK THROUGH THE COLLECTIVE AGGREGATION AND SHARING OF THREAT-INTELLIGENCE WITH AND THROUGH THE COMMUNITY.\n                    <br><br>\n                    If you think someone is infringing your copyright, you can send us a notice of claimed infringement at mulham@scanandro.com, and we’ll take appropriate action. ScanAndro's policies provide for the termination, in appropriate circumstances, of repeat infringers’ access to the Service.\n                </p>\n                <br><br>\n                <p>\n                <b>ScanAndro Rights</b>\n                <br><br>\n                All rights, title, and interest in and to the Service are and will remain the exclusive property of ScanAndro and its licensors. Nothing in these Terms should be construed as conferring by implication or otherwise any license or right under any copyright, patent, trademark, database right, sui generis right or other intellectual property or proprietary interest of ScanAndro, its licensors or any third party. We reserve the right to remove any Samples without prior notice and at our sole discretion. Nothing in our Terms gives you a right to use the ScanAndro trademarks, logos, domain names, and other distinctive brand features.\n               <br><br>\n               Any Samples, feedback, comments, or suggestions you may provide to, or regarding ScanAndro or the Service is entirely voluntary. We are free to use any feedback, comments or suggestions as we see fit and without obligation to you and reserve the right to remove any Sample without prior notice and at our sole discretion.\n               <br><br>\n                <b>Changes in Service</b>\n                <br><br>\n                Service provided by ScanAndro is constantly evolving, and the form and nature of the Service that ScanAndro provides may change from time to time without prior notice to you. Any changes to the Service, including the release of new ScanAndro features, are subject to the Terms then in effect. In addition, ScanAndro may stop (permanently or temporarily) providing the Service (or any features within the Service) without providing prior notice. We also retain the right to create limits on your use of the Service including storage, at our sole discretion, at any time without prior notice to you.\n                <br><br>\n                <b>Disclaimers</b>\n                <br><br>\n                Your access to and use of the Service is at your own risk. You understand and agree that the Service is provided to you on an \"AS IS\" WITHOUT REPRESENTATION OR WARRANTY, WHETHER IT IS EXPRESS, IMPLIED, OR STATUTORY. WITHOUT LIMITING THE FOREGOING, ScanAndro SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.\n                <br><br>\n                WE DO NOT WARRANT OR GUARANTEE THAT THE SERVICES ARE ACCURATE, RELIABLE OR CORRECT; THAT THE SERVICES WILL MEET YOUR REQUIREMENTS; THAT THE SERVICES WILL BE AVAILABLE AT ANY PARTICULAR TIME OR LOCATION, UNINTERRUPTED, ERROR-FREE, WITHOUT DEFECT OR SECURE; THAT ANY DEFECTS OR ERRORS WILL BE CORRECTED; OR THAT THE SERVICES ARE FREE OF VIRUSES OR OTHER HARMFUL COMPONENTS. \n                <br><br>\n                We will not be liable for any loss or damage caused by a distributed denial-of-service attack, viruses or other technologically harmful material that may infect your computer equipment, computer programs, data or other proprietary material due to your access to or use of the Service or any third-party content or websites accessed through, or in any way in conjunction with, the Service.\n                <br><br>\n                Except as may be required by law and as set forth in our <Link to=\"/privacy\">Privacy Policy</Link>, you further understand and agree that ScanAndro has no responsibility or liability for the deletion of, or the failure to store or transmit, any Sample, Content, other materials or communications maintained by the Service.\n                <br><br>\n                <b>Limitation of Liability</b>\n                <br><br>\n                TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, ScanAndro AND ITS PARENT, SUBSIDIARIES, AFFILIATES, OFFICERS, EMPLOYEES, AGENTS, PARTNERS AND LICENSORS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL , EXEMPLARY OR PUNITIVE DAMAGES, INCLUDING WITHOUT LIMITATION, LOSS OF PROFITS, DATA, USE, GOODWILL, OR OTHER LOSSES, RESULTING FROM (i) YOUR ACCESS TO OR USE OF OR INABILITY TO ACCESS OR USE THE SERVICES; (ii) ANY CONDUCT OR CONTENT OF ANY THIRD PARTY, INCLUDING WITHOUT LIMITATION, ANY DEFAMATORY, OFFENSIVE OR ILLEGAL CONDUCT OF OTHER USERS OR THIRD PARTIES; (iii) ANY CONTENT OBTAINED FROM THE SERVICES; AND (iv) UNAUTHORISED ACCESS, USE OR ALTERATION OF YOUR TRANSMISSIONS, SAMPLES OR CONTENT, WHETHER BASED ON WARRANTY, CONTRACT, TORT (INCLUDING NEGLIGENCE) OR ANY OTHER LEGAL THEORY, WHETHER OR NOT WE HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGE.\n                <br><br>\n                THIS LIMITATION OF LIABILITY SECTION APPLIES WHETHER THE ALLEGED LIABILITY IS BASED ON CONTRACT, TORT, NEGLIGENCE, STRICT LIABILITY, OR ANY OTHER BASIS, EVEN IF ScanAndro HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. THE FOREGOING LIMITATION OF LIABILITY WILL APPLY TO THE FULLEST EXTENT PERMITTED BY LAW IN THE APPLICABLE JURISDICTION.\n                <br><br>\n                <b>About These Terms</b>\n                <br><br>\n                Please note that we may update and amend these Terms from time to time and any changes will be posted on the Site. By continuing to access the Service after any changes become effective, you agree to be bound by the revised Terms.\n                <br><br>\n                The failure of ScanAndro to enforce any right or provision of these Terms will not be deemed a waiver of such right or provision. In the event that any provision of these Terms is held to be invalid or unenforceable, the remaining provisions of these Terms will remain in full force and effect.\n                <br><br>\n                These Terms and any dispute or claim arising out of or in connection with them or their subject matter or formation (including non-contractual disputes or claims) shall be governed by and construed in accordance with the laws of Türkiye. The Turkish courts will have exclusive jurisdiction over any claim arising from, or related to, the Service although we retain the right to bring proceedings against you for breach of the Terms in your country of residence or any other relevant country.\n                <br><br>\n                If you have any doubts as to whether your use of the Service complies with these Terms or have a concern with any aspect of the Site or the Service, please contact the manager at: mulham@scanandro.com\n            </p>\n            </div>\n            </Route>\n            <Route path=\"privacy\">\n                <div class=\"about\">\n                    <p>Thank you for your interest in ScanAndro. This Privacy Policy is designed to help you understand what information we collect, why we collect it, how we use it, and how you can update, manage, export, and/or delete your information. This policy further details how we use this information to support stronger global cybersecurity which includes the protection of members of the public, partners, and security-minded organizations that contribute to the Services.</p>\n                    <br><br>\n                    <b>Data Collection & Usage</b>\n                    <br><br>\n                    <p>We collect the samples that you upload according with the reports that are generated from our system during the analyzing process to improve our deep learning model and its prediction accuracy. these samples and reports may also be shared with security community.</p>\n                    <br><br>\n                    <b>Cookies and Similar Technologies</b>\n                    <br><br>\n                    When you use the Services, we send one or more cookies – small text files containing a string of alphanumeric characters – to your computer. For example, we use cookies to ensure proper navigation between pages on the Services. ScanAndro may use both session cookies and persistent cookies. A session cookie disappears after you close your browser. A persistent cookie remains after you close your browser and may be used by your browser on subsequent visits to the Services.\n                    <br><br>\n                    Persistent cookies can be removed. Please review your web browser’s “Help” file to learn the proper way to modify your cookie settings\n                    <br><br>\n                    We may also implement third party content on the Services, such as advertising or analytic service. We currently implement services provided by Google Analytics.\n\nYou may choose to control information collected by ScanAndro, including configuring your browser to indicate when ScanAndro has set a cookie in your browser. You can also configure your browser to block all cookies from a specific domain or all domains.\n                    <br><br>\n                    <br><br>\n                </div>\n            </Route>\n    </main>\n\t</div>\n</Router>\n\n\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmargin: 0 auto;\n        \n\t}\n    .about{\n        text-align: left;\n    }\n    nav {\n  position: absolute;\n  top: 30px;\n  left: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n    }\n   \n\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 3em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 920px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n        h1{\n            font-size: 4em;\n        }\n\t}\n    sup{\n            vertical-align: super;\n            font-size: small;\n        }\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\t\n\t}\n});\n\nexport default app;\n\n\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","null_to_empty","action_destroyer","action_result","destroy","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_data","wholeText","set_style","important","removeProperty","setProperty","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","cancelable","bubbles","e","createEvent","initCustomEvent","custom_event","call","defaultPrevented","setContext","context","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","indexOf","splice","$set","$$props","obj","$$set","isUndefined","isFunction","isNumber","createCounter","isSSR","window","addListener","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","readable","inited","values","pending","cleanup","sync","unsubscribers","createKey","ctxName","LOCATION","ROUTER","ROUTE","ROUTE_PARAMS","FOCUS_ELEM","paramRegex","startsWith","string","search","substr","isSplat","segment","stripSlashes","str","replace","segmentize","uri","filterFalsy","segments","split","Boolean","addQuery","pathname","query","normalizePath","path","join","pathFragments","joinedSegments","labels","createLabel","labelId","createMessage","message","originId","origin","to","basepath","createIdentifier","originMsg","label","createMessageHandler","args","fail","warn","console","rankRoute","route","score","default","fullPath","reduce","acc","nextScore","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","bestMatch","defaultMatch","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","createMatch","routeSegments","routeSegment","uriSegment","splatName","decodeURIComponent","dynamicMatch","exec","match","normalizeLocation","location","hash","state","baseSegments","pathSegments","shift","normalizeUrlFragment","frag","createLocation","url","searchIndex","hashIndex","hasSearchIndex","hasHashIndex","pathnameAndSearch","resolveLink","routeBase","appBase","base","toPathname","toQuery","basePathname","toSegments","concat","allSegments","extractBaseUri","routePath","routeMatch","POP","getLocation","source","encodeURI","decodeURI","history","_key","createStackFrame","canUseDOM","isEmbeddedPage","globalHistory","listeners","action","notifyListeners","listenerFns","listener","unlisten","navigate","go","keyedState","random","toString","substring","createHistory","initialPathname","stack","entries","pushState","title","replaceState","newIndex","createMemorySource","focusCandidate","initialNavigation","pushFocusCandidate","item","level","routerIdA","routerIdB","routerMarkers","querySelectorAll","currentId","Number","dataset","svnavRouter","isAbove","routerId","focus","elem","TABINDEX","hasAttribute","blurListener","activeElement","isEndMarker","id","svnavRouteEnd","selector","parent","querySelector","handleFocus","focusElement","current","nextElementSibling","tagName","heading","queryHeading","documentElement","createTriggerFocus","a11yConfig","announcementText","manageFocus","announceNavigation","announcements","meta","announcementMessage","createAnnouncement","if_block","div","create_if_block","createId","defaultBasepath","primary","a11y","initialBasepath","normalizedBasepath","locationContext","routerContext","isTopLevelRouter","activeRoute","hasActiveRoute","prevLocation","$location","triggerFocus","createRouteFilter","routeId","routeList","routeItem","changedHistory","normalizedLocation","registerRoute","matchingRoute","prevRoutes","nextRoutes","unregisterRoute","$routes","hasHash","shouldManageFocus","$prevLocation","$activeRoute","usePreflightCheck","componentId","ctxKey","ctxProviderId","useLocation","toReadonly","useHistory","useRouteBase","_route","useResolve","div0","div1","parentBase","ssrMatch","useNavigate","isDefault","rawBase","$parentBase","updatedRoute","$$invalidate","isActive","activeParams","a_levels","href","getProps","dispatch","isPartiallyCurrent","isCurrent","ariaCurrent","dynamicProps","$$restProps","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","icons","attention","burger","calendar","cashbox","cashbox2","catalog","check","close","column","copy","cycle","visible","edit","favorite","file","invisible","list3","loader","market","minus","phone","plus","print","question","rouble","save","settings","color","trash","upload","download","move","tree","list4","ok","monitor","mail","fullscreen","smallscreen","cart","notify","image","hub","profile","time","pin","mark","tire","cigarette","shoes","bike","pulse","exit","flash","info","getSVGIconObjet","input","iconObject","viewbox","pathes","raw","span","span_class_value","toLowerCase","class","each_value","circle","circle_cx_value","circle_cy_value","circle_class_value","g","g_transform_value","svg","svg_viewBox_value","icon","status","viewBoxAdjusted","translate","svg_class_value","create_if_block_4","div2","if_block1","disabled","input_disabled_value","label_class_value","isLoading","buttonTitle","activeTitle","fileLoadingTitle","fileTitle","error","dropOnPage","events","bubble","overlayRef","throttleRef","highlight","changeHighlight","unhighlight","val","stopPropagation","clearTimeout","setTimeout","body","$$value","arguments","api","converter","defaultAttributes","expires","Date","now","toUTCString","encodeURIComponent","escape","stringifiedAttributes","attributeName","cookie","write","cookies","jar","parts","foundKey","read","remove","withAttributes","withConverter","freeze","p0","p1","create_if_block_2","create_if_block_1","b0","br0","br1","ul","br2","br3","b1","br4","br5","br6","br7","br8","br9","br10","br11","br12","br13","br14","br15","br16","br17","br18","br19","p2","b2","br20","br21","br22","br23","br24","br25","b3","br26","br27","br28","br29","b4","br30","br31","br32","br33","br34","br35","br36","br37","br38","br39","b5","br40","br41","br42","br43","br44","br45","b6","br46","br47","br48","br49","br50","br51","br52","br53","header","nav","main","h1","Domain","msg","fileName","fileSize","category","End","New","fileType","ErrorMsg","dataTransfer","files","reader","FileReader","onload","ev","crypto","subtle","digest","hashHex","Uint8Array","hashBuffer","padStart","hashResponse","async","res","fetch","method","headers","Authorization","Cookie","JSON","stringify","catch","json","parseInt","post","log","uploading","formData","FormData","ex","onerror","err","readAsArrayBuffer"],"mappings":"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C5BjK,SAAUuH,EACVyC,KAAAA,EACAG,mBAAAA,EACAC,UAAAA,IAEW,MAAA,IAAAG,KAAgBD,UAEtBC,GAVA,qBAaC,SAAQ7Z,GAGZ,GAFJwZ,EAAS,QAASxZ,GXnCb,SAAwBA,GAC9B,OACEA,EAAM4C,kBACU,IAAjB5C,EAAM8Z,UACJ9Z,EAAM+Z,SAAW/Z,EAAMga,QAAUha,EAAMia,SAAWja,EAAMka,UWiCtDC,CAAena,GAAK,CACvBA,EAAMoa,iBAINjI,EAASmH,EAAI,CAAI9J,MAAAA,EAAOpE,QADFsO,GAAatO,iICmCtC,MAAMiP,GAAQ,CACZ,aC7Fa,6LD8Fb,aE9Fa,gKF+Fb,cG/Fa,mKHgGb,WIhGa,2LJiGb,gBKjGa,kRLkGbC,UMlGa,kENmGbC,OOnGa,qHPoGbC,SQpGa,2XRqGbC,QSrGa,oKTsGbC,SUtGa,sQVuGbC,QWvGa,8bXwGbC,MYxGa,yJZyGb,eazGa,kHb0Gb,ec1Ga,qHd2Gb,gBe3Ga,qHf4Gb,agB5Ga,iHhB6GbzW,MiB7Ga,wbjB8Gb0W,MkB9Ga,6UlB+GbC,OmB/Ga,+InBgHbC,KoBhHa,oKpBiHbC,MqBjHa,0TrBkHbC,QsBlHa,iPtBmHbC,KuBnHa,0WvBoHbC,SwBpHa,kvBxBqHb,gByBrHa,2ezBsHbC,K0BtHa,mI1BuHbnV,O2BvHa,8O3BwHbsL,Q4BxHa,+kB5ByHb,iB6BzHa,2X7B0Hb8J,U8B1Ha,kd9B2Hbta,I+B3Ha,kO/B4Hbua,MgC5Ha,yMhC6HbC,OiC7Ha,yDjC8HbC,OkC9Ha,8nBlC+HbjP,QmC/Ha,mVnCgIbkP,MoChIa,yEpCiIb,kBqCjIa,8FrCkIb,gBsClIa,2FtCmIbC,MuCnIa,ohDvCoIbC,KwCpIa,iGxCqIbC,MyCrIa,qOzCsIbC,S0CtIa,mW1CuIbC,O2CvIa,iP3CwIbC,K4CxIa,0T5CyIb7a,I6CzIa,wtD7C0Ib8a,S8C1Ia,qU9C2IbxN,K+C3Ia,4J/C4Ib,YgD5Ia,CAAC,gFAAgF,CAACzC,KAAK,+EAA+EkQ,MAAM,8BhD6IzL,UiD7Ia,CAAC,+EAA+E,CAAClQ,KAAK,gFAAgFkQ,MAAM,8BjD8IzLC,MkD9Ia,yQlD+IbC,OmD/Ia,8JnDgJbC,SoDhJa,2JpDiJb,aqDjJa,kYrDkJbC,KsDlJa,2UtDmJbC,KuDnJa,8IvDoJbC,MwDpJa,kRxDqJbC,GyDrJa,6LzDsJbC,Q0DtJa,uH1DuJb,a2DvJa,kE3DwJb,Y4DxJa,mG5DyJbC,K6DzJa,kL7D0Jb,Y8D1Ja,4J9D2Jb,U+D3Ja,iU/D4JbC,WgE5Ja,uLhE6JbC,YiE7Ja,wLjE8JbC,KkE9Ja,8XlE+Jb,amE/Ja,8NnEgKbC,OoEhKa,0FpEiKb,cqEjKa,sPrEkKbhU,MsElKa,mKtEmKbiU,MuEnKa,oNvEoKbC,IwEpKa,yUxEqKbC,QyErKa,2SzEsKbC,K0EtKa,kH1EuKbC,I2EvKa,8R3EwKbC,K4ExKa,gN5EyKb,Y6EzKa,+hB7E0Kf9d,S8E1Ke,yO9E2Kb+d,K+E3Ka,q3H/E4KbC,UgF5Ka,0RhF6Kb,UiF7Ka,qhBjF8KbC,MkF9Ka,wclF+KbC,KmF/Ka,48CnFgLbC,MoFhLa,oGpFiLbC,KqFjLa,qerFkLb,UsFlLa,qMtFmLb,WuFnLa,oJvFoLb5S,OwFpLa,mHxFqLb6S,MyFrLa,8ezFsLb,kB0FtLa,oV1FuLbC,K2FvLa,2ICqBR,SAASC,GAAgBC,GAC9B,MAAMC,EAAa,CAAEC,QAAS,GAAIC,OAAO,IAEzC,IAAIC,EAAO7D,GAAMyD,GAAUzD,GAAMyD,GAASA,EAE1C,MAAkB,iBAARI,GAAoBA,EAAItT,WAAW,MAAcmT,EAAWE,OAAOjiB,KAAK,CAAC+P,KAAKmS,IAAMH,IAE1F3W,MAAMsC,QAAQwU,KAAMH,EAAWE,OAASC,GACzB,iBAARA,IACNA,EAAIF,UAASD,EAAWC,QAAUE,EAAIF,SACtCE,EAAID,SAAQF,EAAWE,OAAS7W,MAAMsC,QAAQwU,EAAID,QAAUC,EAAID,OAAS,CAACC,EAAID,UAGnFF,EAAWE,OAASF,EAAWE,OAAOjY,KAAIxI,GACxB,iBAANA,GAAkBA,EAAEoN,WAAW,KAAa,CAACmB,KAAKvO,GAC5C,iBAANA,GAAkBA,EAAEuO,KAAavO,EACpC,KACNyI,QAAOzI,KAAKA,EAAEuO,OAEVgS,sGClCiB1d,EAAA8d,EAAA,QAAAC,E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"}